<?xml version="1.0" encoding="utf-8"?>

<WPF:MainWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:WPF="clr-namespace:CreateObject.WPF;assembly=CreateObject"
        xmlns:wpfUtilities="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.Controls.WPF.Utilities;assembly=Autodesk.DataManagement.Client.Framework.Forms"
        xmlns:winFormTheme="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.SkinUtils;assembly=Autodesk.DataManagement.Client.Framework.Forms"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
        Style="{DynamicResource ThemedWindowStyle}"
        x:Name="CustomObjectWindow" SizeToContent="WidthAndHeight" ResizeMode="NoResize" d:DesignWidth="900">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Autodesk.DataManagement.Client.Framework.Forms;component/Controls/WPF/ControlTemplates/MergedResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <WPF:IsMoreThanZeroConverter x:Key="MoreThanZeroConverter"/>
            <WPF:InverseBoolConverter x:Key="BoolConvert"/>
            <WPF:MultiBooleanConverter x:Key="booleanAndConverter" Mode="And" />
            <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ThemedDataGridCellStyle}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Typ}" Value="String">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" CharacterCasing="{Binding Case}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Numeric">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0"
                                         Height="25" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Bool">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True" Margin="4,0,0,0" BorderThickness="0">
                                        <ComboBoxItem Content="True" />
                                        <ComboBoxItem Content="False" />
                                    </ComboBox>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListValues.Count, Converter={StaticResource MoreThanZeroConverter}}" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                    IsEditable="{Binding EnforceListValues, Converter={StaticResource BoolConvert}}" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ThemedDataGridCellStyle}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False"/>
            </Style>
            <Style x:Key="DynamicDataGridBtnCellStyle" TargetType="{x:Type DataGridCell}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
                <Setter Property="Width" Value="0"/>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.CreateMode, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="True"/>
                            <Condition Binding="{Binding DataContext.Prop[_Category].Value, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="Person"/>
                            <Condition Binding="{Binding DispName}" Value="Organisation"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content="{Binding DataContext.UIString[], FallbackValue=. . ., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mExpOrgPersLnk], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" HorizontalAlignment="Right"
                                    ToolTip="{Binding DataContext.UIString[Adsk.Org.Pers.Link_07], FallbackValue='Select from list...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" MinWidth="20"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.CreateMode, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="True"/>
                            <Condition Binding="{Binding DataContext.Prop[_Category].Value, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="Person"/>
                            <Condition Binding="{Binding DispName}" Value="Company"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content="{Binding DataContext.UIString[], FallbackValue=. . ., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mExpOrgPersLnk], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" HorizontalAlignment="Right"
                                    ToolTip="{Binding DataContext.UIString[Adsk.Org.Pers.Link_07], FallbackValue='Select from list...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" MinWidth="20"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <!--<Condition Binding="{Binding DataContext.CreateMode, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="True"/>-->
                            <Condition Binding="{Binding DispName}" Value="Owner"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content="{Binding DataContext.UIString[], FallbackValue=. . ., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mExpOrgPersLnk], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" HorizontalAlignment="Right"
                                    ToolTip="{Binding DataContext.UIString[Adsk.Org.Pers.Link_09], FallbackValue='Select from list...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" BorderThickness="0" MinWidth="20"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <!--#region themed styles for VE dialog standard controls-->
            <Style x:Key="DataStandardLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource ThemedLabelStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#ff0000" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource DataStandardLabelStyle}"/>
            <Style x:Key="DataStandardTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ThemedTextBoxStyle}">
                <Setter Property="Height" Value="24" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="4,0,0,0"/>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DataStandardTextBoxStyle}"/>
            <Style x:Key="DataStandardComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ThemedComboBoxStyle}"/>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}"/>
            <Style x:Key="DocTypeStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding EditMode}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TemplateCbStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding CreateMode}" Value="True">
                        <Setter Property="ItemsSource" Value="{Binding Templates}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding EditMode}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=TemplateTB, Path=Visibility}" Value="Visible">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ThemedComboBoxItemStyle}"/>
            <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource ThemedDatePickerStyle}"/>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButtonStyle}" />
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ThemedCheckBoxStyle}"/>
            <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ThemedContextMenu}"/>
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ThemedDataGridStyle}"/>
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ThemedGroupBoxStyle}"/>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ThemedExpanderStyle}" />
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ThemedRadioButtonBaseStyle}"/>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ThemedScrollViewerStyle}" />
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ThemedTextBlockStyle}"/>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ThemedTabControlStyle}"/>
            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ThemedListBoxStyle }" />
            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ThemedListBoxItemStyle}"/>
            <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource ThemedBorderStyle}"/>
            <!--#endregion themed styles for VE dialog standard controls-->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <WPF:MainWindow.InputBindings>
        <KeyBinding Key="F1" Command="{Binding PsCmd[mHelp(700)]}"/>
    </WPF:MainWindow.InputBindings>
    <TabControl MaxWidth="1200" >
        <TabItem x:Name="tabProperties" Header="{Binding UIString[MSDCE_MultiTab_01], FallbackValue=Properties}">
            <AdornerDecorator>
                <Grid x:Name="grdMain" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="grdGeneralProps" ToolTip="{Binding UIString[73], FallbackValue='General Properties'}"
                            ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" MinWidth="140" />
                            <ColumnDefinition Width="2*" MinWidth="180" />
                        </Grid.ColumnDefinitions>
                        <Label x:Name="lblCategory" Content="{Binding UIString[LBL8], FallbackValue=Category}" Grid.Column="0" />
                        <ComboBox x:Name="Categories" 
                                DisplayMemberPath="Name"
                                SelectedItem="{Binding DynamicPropertiesCategory}"
                                SelectedValuePath="Name"
                                SelectedValue="{Binding Prop[_Category].Value}" Grid.Column="1" IsEnabled="{Binding CreateMode}"
                                ItemsSource="{Binding PsList[GetCategories], Mode=OneTime}"
                                IsTabStop="False" Margin="0,1" />
                        <Label x:Name="lblNumSchm" Content="{Binding UIString[LBL10], FallbackValue=Numberingscheme}"
                                Visibility="{Binding Visibility, ElementName=NumSchms}" Grid.Row="1" />
                        <ComboBox x:Name="NumSchms" Grid.Row="1" Grid.Column="1"
                                DisplayMemberPath="Name"
                                SelectedValuePath="Name"
                                SelectedValue="{Binding Prop[_NumSchm].Value}"
                                ItemsSource="{Binding PsList[GetNumSchms], Mode=OneTime}"
                                IsTabStop="False"
                                IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                                Visibility="{Binding NotEditMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,1" />
                        <Label x:Name="lblProjectNumber" Grid.Column="0" Content="{Binding UIString[LBL31], FallbackValue=Number}"
                                Grid.Row="2" Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" />
                        <WPF:DSNumSchemeCtrl x:Name="DSNumSchmsCtrl"
                                 IsEnabled="{Binding IsEnabled, ElementName=NumSchms}"
                                 Scheme="{Binding SelectedItem, ElementName=NumSchms}"
                                 Visibility="{Binding HasItems, ElementName=NumSchms, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 IsTabStop="False"
                                 GeneratedNumberProperty="_GeneratedNumber" Grid.Row="2" Grid.Column="1" Margin="0,1" />
                        <Label Content="{Binding UIString[LBL19], FallbackValue=Name}" Grid.Column="0" Grid.Row="3"
                                Visibility="{Binding Visibility, ElementName=CUSTOMOBJECTNAME}" />
                        <TextBox x:Name="CUSTOMOBJECTNAME" Text="{WPF:ValidatedBinding Prop[_CustomObjectName].Value}" Grid.Column="1" Grid.Row="3"
                                IsReadOnly="{Binding EditMode}"
                                Visibility="{Binding NumSchmFieldsEmpty, ElementName=DSNumSchmsCtrl, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,1,0,1" />
                        <Label Content="{Binding UIString[LBL4], FallbackValue=State}" Grid.Column="0" Grid.Row="4" />
                        <TextBox Text="{Binding Prop[_XLTN_STATE].Value}" Grid.Column="1" Grid.Row="4" IsReadOnly="True"
                                IsTabStop="False" Margin="0,1" />
                        <Label Content="{Binding UIString[LBL33], FallbackValue=Date Created}" Grid.Column="0" Grid.Row="5" />
                        <TextBox Text="{Binding Prop[_XLTN_CREATE DATE].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}" Grid.Column="1"
                                Grid.Row="5" IsReadOnly="True" IsTabStop="False" Margin="0,1" />
                        <Label Content="{Binding UIString[LBL34], FallbackValue=Created By}" Grid.Column="0" Grid.Row="6" />
                        <TextBox Text="{Binding Prop[_XLTN_CREATED BY].Value}" Grid.Column="1" Grid.Row="6" IsReadOnly="True" IsTabStop="False" Margin="0,1" />
                    </Grid>
                    <Grid x:Name="grdCatProps" Grid.Column="1" Margin="5,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Auto"
                            ScrollViewer.CanContentScroll="True">
                        <DataGrid x:Name="DSDynamicCategoryProperties" 
        				        AutoGenerateColumns="False"
        				        HeadersVisibility="Column"
        				        ItemsSource="{Binding DynamicProperties}"
        				        ScrollViewer.CanContentScroll="False"
                                EnableRowVirtualization="False"
                                VerticalAlignment="Top" MinWidth="400" MaxHeight="350" Margin="0,1,0,0" CanUserReorderColumns="False" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding DispName}" 
                                        CellStyle="{StaticResource DynamicDataGridLabelStyle}" MinWidth="140" Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock
        									Text="{Binding DataContext.UIString[LBL64], FallbackValue=Name, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="22" FontWeight="Bold" />
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Property Value"
        						    CellStyle="{StaticResource DynamicDataGridCellStyle}" MinWidth="200" Width="2*" >
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock
        									Text="{Binding DataContext.UIString[LBL65], FallbackValue=Value , RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="22" FontWeight="Bold"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn CellStyle="{StaticResource DynamicDataGridBtnCellStyle}" >
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <Grid x:Name="ButtonGrid" Grid.ColumnSpan="2" Grid.Row="2" Margin="0,15,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnOK" Content="{Binding UIString[BTN1], FallbackValue=OK}"
                            Command="{Binding CloseWindowCommand, ElementName=CustomObjectWindow}"
                            Grid.Column="2" Width="80" Height="24" IsDefault="True" >
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource booleanAndConverter}" Mode="OneWay">
                                    <Binding Path="Properties.IsValid" />
                                    <Binding Path="IsValid" ElementName="DSNumSchmsCtrl" />
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                        <Button x:Name="btnEsc" Content="{Binding UIString[BTN2], FallbackValue=Esc}"
                    Command="{Binding CancelWindowCommand, ElementName=CustomObjectWindow}" Grid.Column="4" Width="80"
                    HorizontalAlignment="Right" Height="24" IsCancel="True" />
                        <Button x:Name="btnHelp" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" 
                    Command="{Binding PsCmd[mHelp(700)]}" Height="24" ToolTip="F1" Margin="0" Width="80" />
                    </Grid>
                    <Grid x:Name="grdComments" Grid.ColumnSpan="2" Grid.Row="1" Margin="0,5,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="lblComments" Content="{Binding UIString[LBL7], FallbackValue=Comments}" Height="Auto" BorderThickness="1,1,0,1" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=lblCategory, Mode=OneWay}" />
                        <TextBox x:Name="txtComments" Text="{WPF:ValidatedBinding Prop[_XLTN_COMMENTS].Value}" Height="Auto" TextWrapping="Wrap" MinHeight="62" Grid.Column="1" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" MaxHeight="102" VerticalContentAlignment="Top"/>
                    </Grid>
                    <Expander x:Name="expOrgPersLnk" Grid.Column="2" ExpandDirection="Right" IsExpanded="True" Visibility="Visible" MaxWidth="380" Grid.RowSpan="3">
                        <Border BorderThickness="1">
                            <Grid x:Name="grdOrgPersLnk">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="140"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" ToolTip="{Binding UIString[Adsk.Org.Pers.Link_04]}"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid x:Name="grdItemSearchHeader" Grid.ColumnSpan="4" Margin="0,0,0,5">
                                    <Grid.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                    <Setter Property="Panel.Background" Value="#FF2E3440" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                    <Setter Property="Panel.Background" Value="#FFEEEEEE" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Image HorizontalAlignment="Left" Width="16" Height="16" Margin="5,0,0,0">
                                        <Image.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\user-w.ico" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\user-w.ico" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock x:Name="lblItemMaster" Text="{Binding UIString[Adsk.Org.Pers.Link_05], FallbackValue=Select Customer from Organisations}" Margin="10,0,0,0" FontSize="14"  Padding="10,5,0,0" 
                                            TextWrapping="Wrap" VerticalAlignment="Center" Height="27" FontWeight="Bold"/>
                                </Grid>
                                <Label x:Name="lblOrganisation" Content="{Binding UIString[MSDCE_CO01], FallbackValue=Organisation}" Visibility="{Binding Visibility, ElementName=cmbOrganisation}" Grid.Row="1"/>
                                <ComboBox x:Name="cmbOrganisation" Grid.Column="1" MinWidth="200"
                                DisplayMemberPath="Name" SelectedValuePath="Name" Grid.Row="1" Margin="0,1" />
                                <Label x:Name="lblPerson" Content="{Binding UIString[Adsk.Org.Pers.Link_00], FallbackValue=Person}" Visibility="{Binding Visibility, ElementName=cmbPerson}" Grid.Row="2"/>
                                <ComboBox x:Name="cmbPerson" Grid.Row="2" Grid.Column="1" 
                                DisplayMemberPath="Name" SelectedValuePath="Name" Margin="0,1" />
                                <Grid x:Name="grdButtons" Grid.Row="4" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                </Grid>
                                <Label x:Name="lblCreateLnks" Content="{Binding UIString[Adsk.Org.Pers.Link_03], FallbackValue=Create Link(s)}" Height="Auto" Grid.Row="3" Margin="0,1"/>
                                <CheckBox x:Name="chkBoxCreateLnks" Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>                        
                    </Expander>
                </Grid>
            </AdornerDecorator>
        </TabItem>
    </TabControl>
</WPF:MainWindow>