<?xml version="1.0" encoding="utf-8"?>

<WPF:MainWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:WPF="clr-namespace:CreateObject.WPF;assembly=CreateObject"
    xmlns:wpfUtilities="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.Controls.WPF.Utilities;assembly=Autodesk.DataManagement.Client.Framework.Forms"
    xmlns:winFormTheme="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.SkinUtils;assembly=Autodesk.DataManagement.Client.Framework.Forms"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib" Style="{DynamicResource ThemedWindowStyle}" x:Name="FileWindow" SizeToContent="WidthAndHeight" ResizeMode="NoResize" >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Autodesk.DataManagement.Client.Framework.Forms;component/Controls/WPF/ControlTemplates/MergedResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <WPF:IsMoreThanZeroConverter x:Key="MoreThanZeroConverter"/>
            <WPF:InverseBoolConverter x:Key="BoolConvert"/>
            <WPF:MultiBooleanConverter x:Key="booleanAndConverter" Mode="And" />
            <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ThemedDataGridCellStyle}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Typ}" Value="String">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" CharacterCasing="{Binding Case}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short" BorderThickness="0"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Numeric">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" Height="25" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Bool">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True" Margin="4,0,0,0" BorderThickness="0">
                                        <ComboBoxItem Content="True" />
                                        <ComboBoxItem Content="False" />
                                    </ComboBox>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListValues.Count, Converter={StaticResource MoreThanZeroConverter}}" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}" IsEditable="{Binding EnforceListValues, Converter={StaticResource BoolConvert}}" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Material">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" CharacterCasing="{Binding Case}" IsReadOnly="True" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Part Number">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" CharacterCasing="{Binding Case}" IsReadOnly="True" ToolTip="System generated" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Teilenummer">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" CharacterCasing="{Binding Case}" IsReadOnly="True" ToolTip="System generated" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Class">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" ToolTip="{Binding DataContext.UIString[], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, FallbackValue='Select the document tag for automatic naming'}" IsReadOnly="False" IsTabStop="True"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ThemedDataGridCellStyle}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False"/>
            </Style>
            <Style x:Key="DynamicDataGridBtnCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ThemedDataGridCellStyle}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
                <Setter Property="Width" Value="0"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Name}" Value="Part Number">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Part_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue=Expand Item Query Builder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" Padding="5,1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Teilenummer">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Part_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue=Expand Item Query Builder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" Padding="5,1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Stock Number">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Stock_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue=Expand Item Query Builder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" Padding="5,1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Bestandsnummer">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Stock_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue=Expand Item Query Builder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" Padding="5,1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Title">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content=" . . . " Command="{Binding DataContext.PsCmd[mInitializeTermCatalog], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" ToolTip="{Binding DataContext.UIString[ClassTerms_TT05], FallbackValue='No hand typed values, select from Catalog...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" Padding="5,1" IsTabStop="False" MinWidth="20" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Titel">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content=" . . . " Command="{Binding DataContext.PsCmd[mInitializeTermCatalog], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" ToolTip="{Binding DataContext.UIString[ClassTerms_TT05], FallbackValue='No hand typed values, select from Catalog...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" IsEnabled="{Binding PsVal[InvertReadOnly]}" Padding="5,1" IsTabStop="False" MinWidth="20" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ClassificationDataGridCellStyle" TargetType="{x:Type DataGridCell}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" />
                        </ControlTemplate>
                        <!--<ControlTemplate>
                        <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value, StringFormat=N}" IsEditable="True" BorderThickness="0" />
                    </ControlTemplate>-->
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                    </Trigger>
                    <DataTrigger Binding="{Binding EnforceListValues}" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}" IsEditable="False" BorderThickness="0"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListValues.Count}" Value="0">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{Binding Value, StringFormat=N}" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Bool">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True">
                                        <ComboBoxItem Content="True" />
                                        <ComboBoxItem Content="False" />
                                    </ComboBox>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--#region themed styles for VE dialog standard controls-->
            <Style x:Key="DataStandardLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource ThemedLabelStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#ff0000" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource DataStandardLabelStyle}"/>
            <Style x:Key="DataStandardTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ThemedTextBoxStyle}">
                <Setter Property="Height" Value="24" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="4,0,0,0"/>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DataStandardTextBoxStyle}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                        <Setter Property="BorderBrush" Value="Red" />
                    </Trigger>
                    <Trigger Property="Validation.HasError" Value="false">
                    </Trigger>
                    <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataStandardComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ThemedComboBoxStyle}"/>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}"/>
            <Style x:Key="DocTypeStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding EditMode}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TemplateCbStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding CreateMode}" Value="True">
                        <Setter Property="ItemsSource" Value="{Binding Templates}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding EditMode}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=TemplateTB, Path=Visibility}" Value="Visible">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ThemedComboBoxItemStyle}"/>
            <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource ThemedDatePickerStyle}"/>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButtonStyle}" />
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ThemedCheckBoxStyle}"/>
            <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ThemedContextMenu}"/>
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ThemedDataGridStyle}"/>
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ThemedGroupBoxStyle}"/>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ThemedExpanderStyle}" />
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ThemedRadioButtonBaseStyle}"/>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ThemedScrollViewerStyle}" />
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ThemedTextBlockStyle}"/>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ThemedTabControlStyle}"/>
            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ThemedListBoxStyle }" />
            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ThemedListBoxItemStyle}"/>
            <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource ThemedBorderStyle}"/>
            <!--#endregion themed styles for VE dialog standard controls-->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <WPF:MainWindow.InputBindings>
        <KeyBinding Key="F1" Command="{Binding PsCmd[mHelp(500)]}"/>
    </WPF:MainWindow.InputBindings>
    <TabControl >
        <TabItem x:Name="tabProperties" Header="{Binding UIString[MSDCE_MultiTab_01], FallbackValue=Properties}">
            <AdornerDecorator>
                <Grid x:Name="grdMain" Margin="5,10,5,5" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="grdGeneralProps" Margin="0" ToolTip="{Binding UIString[LBL73], FallbackValue=General Properties}" Width="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" MinWidth="140" />
                            <ColumnDefinition Width="2*" MinWidth="200" />
                        </Grid.ColumnDefinitions>
                        <Label x:Name="label" Content="{Binding UIString[LBL8], FallbackValue=Categories}" Grid.Row="2" Grid.Column="0" />
                        <ComboBox x:Name="Categories" Grid.Row="2" Grid.Column="1" DisplayMemberPath="Name" SelectedItem="{Binding DynamicPropertiesCategory}" SelectedValuePath="Name" SelectedValue="{Binding Prop[_Category].Value}" ItemsSource="{Binding PsList[GetCategories], Mode=OneTime}" IsEnabled="{Binding CreateMode}" Margin="0,1" />
                        <Label Content="{Binding UIString[LBL23], FallbackValue=DocTypes}" Grid.Column="0" Visibility="{Binding Visibility, ElementName=DocTypeCombo}" />
                        <!-- Don't use static xml resource, use viewmodel binding instead. -->
                        <ComboBox ItemsSource="{Binding PsList[GetTemplateFolders], Mode=OneTime}" x:Name="DocTypeCombo" Grid.Row="0" Grid.Column="1" IsEnabled="{Binding CreateMode}" DisplayMemberPath="DocName" SelectedValuePath="Path" SelectedValue="{Binding TemplatePath, Mode=OneWayToSource}" SelectedIndex="0" Style="{StaticResource DocTypeStyle}" Margin="0,1" />
                        <Label Content="{Binding UIString[LBL9], FallbackValue=Templates}" Grid.Row="1" Grid.Column="0" Visibility="{Binding Visibility, ElementName=TemplateCB}" />
                        <Grid Grid.Row="1" Grid.Column="1" Margin="0,1">
                            <ComboBox x:Name="TemplateCB" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding SelectedTemplate}" Style="{StaticResource TemplateCbStyle}" />
                            <TextBlock x:Name="TemplateTB" Text="{Binding UIString[LBL28]}" Margin="1" IsHitTestVisible="False">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SelectedItem, ElementName=TemplateCB}" Value="{x:Null}" />
                                                    <Condition Binding="{Binding CreateMode}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <Label Content="{Binding UIString[LBL10], FallbackValue=Numberingscheme}" Grid.Column="0" Grid.Row="3" Visibility="{Binding Visibility, ElementName=NumSchms}" />
                        <ComboBox x:Name="NumSchms" Grid.Column="1" Grid.Row="3" SelectedIndex="0" DisplayMemberPath="Name" SelectedValuePath="Name" SelectedValue="{Binding Prop[_NumSchm].Value}" ItemsSource="{Binding PsList[GetNumSchms], Mode=OneTime}" IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}" Visibility="{Binding NotEditMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,1" />
                        <Label Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Column="0" Grid.Row="4" Height="Auto" Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" />
                        <WPF:DSNumSchemeCtrl Grid.Column="1" Grid.Row="4" x:Name="DSNumSchmsCtrl" IsEnabled="{Binding IsEnabled, ElementName=NumSchms}" Scheme="{Binding SelectedItem, ElementName=NumSchms}" Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}" GeneratedNumberProperty="_GeneratedNumber" Margin="0,1" />
                        <Label Content="{Binding UIString[LBL4], FallbackValue=State}" Grid.Column="0" Grid.Row="5" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBox Text="{Binding Prop[_XLTN_STATE].Value}" Grid.Row="5" Grid.Column="1" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" IsReadOnly="True" Margin="0,1"/>
                        <Label Content="{Binding UIString[LBL33], FallbackValue=Date Created}" Grid.Column="0" Grid.Row="6" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <TextBox Text="{Binding Prop[_XLTN_DATE VERSION CREATED].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}" Grid.Row="6" Grid.Column="1" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" IsReadOnly="True" Margin="0,1"/>
                        <Label Content="{Binding UIString[LBL34], FallbackValue=Created By}" Grid.Column="0" Grid.Row="7" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBox Text="{Binding Prop[_XLTN_CREATED BY].Value}" Grid.Row="7" Grid.Column="1" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" IsReadOnly="True" Margin="0,1" />
                        <Label x:Name="lblComments" Content="{Binding UIString[LBL7], FallbackValue=Comments}" Grid.Row="9" Height="Auto" Grid.RowSpan="2" BorderThickness="1" />
                        <TextBox Grid.Row="9" Text="{Binding Prop[_XLTN_COMMENTS].Value}" x:Name="Comments" Grid.Column="1" VerticalScrollBarVisibility="Auto" Height="Auto" TextWrapping="Wrap" AcceptsReturn="True" VerticalContentAlignment="Top" MinHeight="50" MaxHeight="50" Margin="0,1" />
                    </Grid>
                    <DataGrid x:Name="DSDynamicCategoryProperties" AutoGenerateColumns="False" HeadersVisibility="Column" ItemsSource="{Binding DynamicProperties}" ScrollViewer.CanContentScroll="False" EnableRowVirtualization="False" VerticalAlignment="Top" MinWidth="400" MaxHeight="500" Grid.Column="1" Margin="5,1,0,0" CanUserReorderColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding DispName}" CellStyle="{StaticResource DynamicDataGridLabelStyle}" Width="*" MinWidth="140" IsReadOnly="True">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[LBL64], FallbackValue=Name, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="22" FontWeight="Bold" />
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn Header="Property Value" CellStyle="{StaticResource DynamicDataGridCellStyle}" Width="2*" MinWidth="200">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[LBL65], FallbackValue=Value , RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="22" FontWeight="Bold"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn CellStyle="{StaticResource DynamicDataGridBtnCellStyle}">
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Expander x:Name="expFilePath" Grid.ColumnSpan="2" Header="{Binding UIString[LBL6], FallbackValue=File Name}" Grid.Row="2" VerticalAlignment="Bottom">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding UIString[LBL5], FallbackValue=Path}" Grid.Column="0" Grid.Row="1" BorderThickness="1" Width="{Binding ActualWidth, ElementName=label, Mode=OneWay}" />
                            <TextBox Text="{WPF:ValidatedBinding Prop[_FilePath].Value}" IsReadOnly="True" IsTabStop="False" Grid.Row="1" Grid.Column="1" />
                            <Label Content="{Binding UIString[LBL6], FallbackValue=Filename}" Grid.Column="0" Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" />
                            <TextBox x:Name="FILENAME" Text="{WPF:ValidatedBinding Prop[_FileName].Value}" IsTabStop="False" Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" Grid.Column="1" IsReadOnly="{Binding EditMode}" />
                        </Grid>
                    </Expander>
                    <Grid x:Name="ButtonGrid" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,5,2,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnOK" Content="{Binding UIString[BTN1], FallbackValue=OK}" Command="{Binding CloseWindowCommand, ElementName=FileWindow}" Grid.Column="2" Width="80" Height="24" IsDefault="True" ToolTipService.ShowOnDisabled="True">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource booleanAndConverter}" Mode="OneWay">
                                    <Binding Path="Properties.IsValid" />
                                    <Binding Path="IsValid" ElementName="DSNumSchmsCtrl" />
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                        <Button x:Name="btnEsc" Content="{Binding UIString[BTN2], FallbackValue=Cancel}" Command="{Binding CancelWindowCommand, ElementName=FileWindow}" Grid.Column="4" Width="80" HorizontalAlignment="Right" Height="24" IsCancel="True" />
                        <Button x:Name="btnHelp" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" Command="{Binding PsCmd[mHelp(500)]}" Height="24" ToolTip="F1" Margin="0" Width="80" />
                    </Grid>
                    <Expander x:Name="expItemMasterSearch" Grid.Column="2" Header="" ExpandDirection="Right" IsExpanded="False" Visibility="Collapsed" Grid.RowSpan="4" MinHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" MaxHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}">
                        <Border>
                            <Grid x:Name="grdItemSearchMain">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="160"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="160"/>
                                    <ColumnDefinition Width="200"/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="grdItemSearchHeader" Grid.ColumnSpan="4" Margin="0,0,0,5">
                                    <Grid.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                    <Setter Property="Grid.Background" Value="#FF2E3440" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                    <Setter Property="Grid.Background" Value="#FFEEEEEE" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Image HorizontalAlignment="Left" Width="16" Height="16" Margin="5,0,0,0">
                                        <Image.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\ItemMaster_32.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\ItemMaster_32.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock x:Name="lblItemMaster" Text="{Binding UIString[Adsk.QS.ItemSearch_00], FallbackValue=Item Master}" Margin="26,0,0,0" FontSize="14" Padding="10,5,0,0" VerticalAlignment="Center" Height="27" FontWeight="Bold"/>
                                </Grid>
                                <Label x:Name="lblItemSearchMultipleProp" Content="{Binding UIString[Adsk.QS.ItemSearch_01], FallbackValue=Multiple Properties}" Grid.Row="1" />
                                <Label x:Name="lblItemSearchTitle" Content="{Binding UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title (Item\, ECO)}" Grid.Row="2"/>
                                <TextBox x:Name="txtItemSearchMultipleProp" Grid.Column="1" Grid.Row="1" Margin="0,0,0,1"/>
                                <TextBox x:Name="txtItemSearchTitle" Grid.Column="1" Grid.Row="2" Margin="0,0,0,1"/>
                                <ComboBox x:Name="cmbItemSearchCategory" ItemsSource="{Binding PsList[mGetItemCategories], Mode=OneTime}" Grid.Column="1" Grid.Row="3" Margin="0,0,0,1"/>
                                <TextBox x:Name="txtItemSearchNumber" Grid.Column="3" Grid.Row="1" Margin="0,0,0,1"/>
                                <TextBox x:Name="txtItemSearchDescription" Grid.Column="3" Grid.Row="2" Margin="0,0,0,1"/>
                                <ComboBox x:Name="cmbItemSearchMaterial" Grid.Column="3" Grid.Row="3" Margin="0,0,0,1"/>
                                <Grid x:Name="grdItemSearchButtons" Grid.Row="4" Grid.ColumnSpan="4" Margin="5,10,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="btnItemSearch" Command="{Binding PsCmd[mGetItemsBySearchCriterias]}" HorizontalAlignment="Left" Height="24" Margin="0,0,10,0">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Image Width="16" Height="16" StretchDirection="DownOnly">
                                                <Image.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\BasicSearchSearched_16.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\BasicSearchSearched_16.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <Label Content="{Binding UIString[Adsk.QS.ItemSearch_07], FallbackValue=Search}" Grid.Column="1" Padding="3,0,5,0" />
                                        </Grid>
                                    </Button>
                                    <Button x:Name="btnItemSearchClear" Command="{Binding PsCmd[mItemSearchClear]}" HorizontalAlignment="Left" Height="24" Grid.Column="1" Margin="0,0,10,0">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Image Width="16" Height="16" StretchDirection="DownOnly">
                                                <Image.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\BasicSearchNotSearched_16.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\BasicSearchNotSearched_16.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <Label Content="{Binding UIString[Adsk.QS.ItemSearch_], FallbackValue=Clear}" Grid.Column="1" Padding="3,0,5,0" />
                                        </Grid>
                                    </Button>
                                </Grid>
                                <Label x:Name="lblItemSearchCategory" Content="{Binding UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category Name}" Grid.Row="3"/>
                                <Label x:Name="lblItemSearchNumber" Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Column="2" Grid.Row="1" Height="Auto"/>
                                <Label x:Name="lblItemSearchDescription" Content="{Binding UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description}" Grid.Column="2" Grid.Row="2" Height="Auto"/>
                                <Label x:Name="lblItemSearchMaterial" Content="{Binding UIString[LBL75], FallbackValue=Material}" Grid.Column="2" Grid.Row="3" Height="Auto"/>
                                <TextBox x:Name="txtItemSearchResultMsg" Grid.ColumnSpan="4" Grid.Row="5" TextWrapping="Wrap" Text="" Background="#FFFFFFE1" Foreground="Black" BorderThickness="1,1,1,0" VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True"/>
                                <DataGrid x:Name="ItemsFound" AutoGenerateColumns="False" Grid.ColumnSpan="4" Grid.Row="6" SelectionMode="Single" CanUserResizeRows="False" IsReadOnly="True" MaxHeight="{Binding MaxHeight, ElementName=DSDynCatPropGrid}" RowHeight="24" ColumnHeaderHeight="26">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn x:Name="ItemSearchNumber" Binding="{Binding Item}" Width="*">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_04], FallbackValue=Number, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn x:Name="ItemSearchTitle" Binding="{Binding Title}" Width="*">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn x:Name="ItemSearchDescription" Binding="{Binding Description}" Width="*">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn x:Name="ItemSearchMaterial" Binding="{Binding Material}" Width="*">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.UIString[LBL75], FallbackValue=Material, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn x:Name="ItemSearchCategory" Binding="{Binding Category}" Width="*">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                    <DataGrid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="{Binding PsCmd[mCopyItemData]}" Header="{Binding UIString[Adsk.QS.ItemSearch_11], FallbackValue='Copy Item Data'}" ToolTip="{Binding UIString[Adsk.QS.ItemSearch_12]}">
                                                <MenuItem.Icon>
                                                    <Image Width="16" Height="16" StretchDirection="DownOnly">
                                                        <Image.Style>
                                                            <Style>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\CopyDesign_16.png" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\CopyDesign_16.png" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                </DataGrid>
                                <Button x:Name="btnItemDataCopy" Grid.Row="7" Margin="0,10" HorizontalAlignment="Center" IsEnabled="False" Command="{Binding PsCmd[mCopyItemData]}" Grid.ColumnSpan="4" ToolTipService.ShowOnDisabled="True" ToolTip="{Binding UIString[Adsk.QS.ItemSearch_12]}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Image Width="16" Height="16" StretchDirection="DownOnly">
                                            <Image.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                            <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\CopyDesign_16.png" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                            <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\CopyDesign_16.png" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <Label x:Name="lblBtnItemDataCopy" Content="{Binding UIString[Adsk.QS.ItemSearch_11], FallbackValue='Copy Item Data'}" ToolTip="{Binding UIString[Adsk.QS.ItemSearch_12], FallbackValue=Copy metadata to file property}" Grid.Column="1" BorderThickness="0"/>
                                    </Grid>
                                </Button>
                            </Grid>
                        </Border>
                    </Expander>
                    <Expander x:Name="expTermSearch" Grid.Column="2" Header="" ExpandDirection="Right" IsExpanded="False" Visibility="Collapsed" Grid.RowSpan="4" MinHeight="360" VerticalAlignment="Stretch" MaxHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}">
                        <Border>
                            <Grid x:Name="grdTermCatalog" Margin="5,0" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition MaxHeight="350"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid x:Name="grdTermsSearchHeader" Grid.ColumnSpan="4" Margin="0,0,0,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                        <Setter Property="Grid.Background" Value="#FF2E3440" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                        <Setter Property="Grid.Background" Value="#FFEEEEEE" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <Image HorizontalAlignment="Left" Width="24" Height="24" Margin="5,0,0,0">
                                            <Image.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                            <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\Term-OK.ico" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                            <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\Term-OK.ico" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <TextBlock x:Name="lblTermMaster" Text="{Binding UIString[], FallbackValue='Terms Master'}" Margin="26,0,0,0" FontSize="14" Padding="10,5,0,0" VerticalAlignment="Center" Height="27" FontWeight="Bold"/>
                                    </Grid>
                                </Grid>
                                <GroupBox x:Name="grpClassification" Header="{Binding UIString[ClassTerms_14], FallbackValue=Classification Filter}" Grid.Row="1">
                                    <Grid x:Name="grdContentFilter">
                                        <WrapPanel x:Name="wrpClassification" Grid.Row="2">
                                            <Button x:Name="btnClsReset" Command="{Binding PsCmd[mResetClassFilter]}" Content="X" FontWeight="Bold" ToolTip="{Binding UIString[ClassTerms_TT07], FallbackValue=Reset Selection}" Foreground="Red" Width="24" Height="24">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1">
                                                            <Image x:Name="imgTemplateReset" Source="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\filter-delete.ico" Margin="2" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </WrapPanel>
                                    </Grid>
                                </GroupBox>
                                <GroupBox x:Name="grpSearchText" Grid.Row="2" Header="{Binding UIString[ClassTerms_16], FallbackValue=Search Text \= term definition; add Language(s) below to widen scope}">
                                    <Grid x:Name="grdTermSearch" Width="562" HorizontalAlignment="Left">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox x:Name="mSearchTermText" Grid.Column="0" ToolTip="{Binding UIString[ClassTerms_TT06], FallbackValue=Apply * for partial terms}" BorderThickness="1" HorizontalAlignment="Left" Width="250"/>
                                        <Button x:Name="btnSearchTerm" Grid.Column="1" Command="{Binding PsCmd[mSearchTerms]}" Margin="3,0,0,0" Height="24" HorizontalAlignment="Left">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Image Width="16" Height="16" StretchDirection="DownOnly">
                                                    <Image.Style>
                                                        <Style>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\BasicSearchSearched_16.png" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\BasicSearchSearched_16.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                                <Label Content="{Binding UIString[ClassTerms_BTN8], FallbackValue=Search}" Padding="3,0,5,0" Grid.Column="1"/>
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </GroupBox>
                                <GroupBox x:Name="grpLanguages" Header="{Binding UIString[ClassTerms_15], FallbackValue=Languages}" Grid.Row="3">
                                    <Grid x:Name="grdLanguages" Margin="0,5,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox x:Name="chkDE" Content="{Binding UIString[ClassTerms_02], FallbackValue=German}"/>
                                        <CheckBox x:Name="chkEN" Content="{Binding UIString[ClassTerms_03], FallbackValue=English}" Grid.Column="1"/>
                                        <CheckBox x:Name="chkFR" Content="{Binding UIString[ClassTerms_04], FallbackValue=French}" Grid.Column="2"/>
                                        <CheckBox x:Name="chkIT" Content="{Binding UIString[ClassTerms_05], FallbackValue=Italian}" Grid.Column="3"/>
                                    </Grid>
                                </GroupBox>
                                <TextBox x:Name="txtTermStatusMsg" Grid.Row="4" TextWrapping="Wrap" HorizontalContentAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Visibility="Collapsed" Background="#FFF6FB82" Foreground="Black"/>
                                <DataGrid x:Name="dataGrdTermsFound" AutoGenerateColumns="False" IsTabStop="False" IsReadOnly="True" ColumnWidth="*" ColumnHeaderHeight="26" Cursor="Hand" ClipboardCopyMode="IncludeHeader" Focusable="False" VerticalScrollBarVisibility="Auto" Grid.Row="5" RowHeight="24" Margin="0,2,0,0">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Term_DE}" Width="Auto" MinWidth="140">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.UIString[ClassTerms_02], FallbackValue=German, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Binding="{Binding Term_EN}" Width="Auto" MinWidth="140">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.UIString[ClassTerms_03], FallbackValue=English, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Binding="{Binding Term_FR}" Width="Auto" MinWidth="140">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.UIString[ClassTerms_04], FallbackValue=French, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Binding="{Binding Term_IT}" Width="Auto" MinWidth="140">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.UIString[ClassTerms_05], FallbackValue=Italian, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                    <DataGrid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="{Binding PsCmd[m_SelectTerm]}" Header="{Binding UIString[ClassTerms_BTN9], FallbackValue='Copy Term Data'}" ToolTip="{Binding UIString[ClassTerms_TT00]}" CommandParameter="{Binding SelectedIndex, ElementName=dataGrdTermsFound}">
                                                <MenuItem.Icon>
                                                    <Image Width="16" Height="16" StretchDirection="DownOnly">
                                                        <Image.Style>
                                                            <Style>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\CopyDesign_16.png" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\CopyDesign_16.png" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                </DataGrid>
                                <Grid x:Name="grdButtons" Grid.Row="6" Margin="0,15,0,5">
                                    <Button x:Name="btnAdopt" Command="{Binding PsCmd[m_SelectTerm]}" HorizontalAlignment="Center" IsEnabled="False" Height="24" ToolTip="{Binding UIString[ClassTerms_TT00]}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Image Width="16" Height="16" StretchDirection="DownOnly">
                                                <Image.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\CopyDesign_16.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\CopyDesign_16.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <Label Content="{Binding UIString[ClassTerms_BTN10], FallbackValue=Copy Term Data}" Padding="3,0,5,0" Grid.Column="1" />
                                        </Grid>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Border>
                    </Expander>
                </Grid>
            </AdornerDecorator>
        </TabItem>
        <TabItem x:Name="tabRevision" Header="{Binding UIString[LBL12], FallbackValue=Revision}">
            <AdornerDecorator>
                <Grid x:Name="grdRevision" Width="{Binding ActualWidth, ElementName=grdMain, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" Margin="5,10,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="grdRevSysProps" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="140"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition MinWidth="140"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="lblRevision1" Content="{Binding UIString[LBL12], FallbackValue=Revision}" Grid.Row="0"/>
                        <TextBox x:Name="txtRevision1" Text="{Binding Prop[_XLTN_REVISION].Value}" Grid.Column="1" IsReadOnly="True" Grid.Row="0" Height="Auto" Margin="0,1"/>
                        <Label x:Name="lblStatus1" Content="{Binding UIString[LBL4], FallbackValue=Status}" Grid.Row="1"/>
                        <TextBox x:Name="txtStatus1" Text="{Binding Prop[_XLTN_STATE].Value}" Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" IsReadOnly="True" Height="Auto" Margin="0,1" />
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_06], FallbackValue='Latest Released Rev.'}" Grid.Column="3" Visibility="{Binding Visibility, ElementName=LatestRev}"/>
                        <CheckBox x:Name="LatestRev" Grid.Column="4" IsChecked="{Binding Prop[Latest Released Revision].Value}" IsEnabled="False" VerticalAlignment="Center" Margin="5,0,0,0" />
                        <Label x:Name="lbLfcDef1" Content="{Binding UIString[Adsk.QS.RevTab_02], FallbackValue=Lifecycle Definition}" Grid.Column="3" Grid.Row="1"/>
                        <TextBox x:Name="txtLfcDef1" Text="{Binding Prop[_XLTN_LIFECLCDEF].Value}" Grid.Column="4" Grid.Row="1" IsReadOnly="True" Height="Auto" Margin="0,1" />
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_13], FallbackValue=Originator}" Grid.Row="2"/>
                        <TextBox x:Name="txtOriginator" Text="{Binding Prop[_XLTN_ORIGINATOR].Value}" Grid.Column="1" Grid.Row="2" IsReadOnly="True" Height="Auto" Margin="0,1" />
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_14], FallbackValue='Original Create Date'}" Grid.Row="2" Grid.Column="3"/>
                        <TextBox x:Name="txtOrigCreateDate" Text="{Binding Prop[_XLTN_ORIGCREATEDATE].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}" Grid.Column="4" Grid.Row="2" IsReadOnly="True" Height="Auto" Margin="0,1"/>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_15], FallbackValue='Initial Approver'}" Grid.Row="3" Grid.Column="0"/>
                        <TextBox x:Name="txtInitApprover" Text="{WPF:ValidatedBinding Prop[_XLTN_INITIALAPPROVER].Value}" IsReadOnly="True" Grid.Column="1" Grid.Row="3" Height="Auto" Margin="0,1"/>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_16], FallbackValue='Initial Release Date'}" Grid.Row="3" Grid.Column="3"/>
                        <TextBox x:Name="txtInitalRelDate" Text="{WPF:ValidatedBinding Prop[_XLTN_INITRELEASEDATE].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}" IsReadOnly="True" Grid.Column="4" Grid.Row="4" Margin="0,1" />
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_17], FallbackValue='Latest Approver'}" Grid.Row="4" Grid.Column="0"/>
                        <TextBox x:Name="txtLatestApprover" Text="{WPF:ValidatedBinding Prop[_XLTN_LATESTAPPROVER].Value}" IsReadOnly="True" Grid.Column="1" Grid.Row="4" Height="Auto" Margin="0,1"/>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_18], FallbackValue='Latest Released Date'}" Grid.Row="4" Grid.Column="3"/>
                        <TextBox x:Name="txtLatestRelDate" Text="{WPF:ValidatedBinding Prop[_XLTN_LATESTRELEASEDATE].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}" IsReadOnly="True" Grid.Column="4" Grid.Row="3" Margin="0,1" />
                    </Grid>
                    <Grid x:Name="grdApproval" Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" MinWidth="140"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="1*" MinWidth="140"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding UIString[CheckedBy], FallbackValue=Checked By}" Grid.Row="0" Grid.Column="0"/>
                        <TextBox x:Name="txtCheckedBy" Text="{WPF:ValidatedBinding Prop[_XLTN_CHECKEDBY].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Grid.Column="1" Grid.Row="0" Height="Auto" Margin="0,1"/>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_07], FallbackValue=Checked Date}" Grid.Row="0" Grid.Column="3" Height="Auto"/>
                        <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[_XLTN_CHECKEDDATE].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto" Grid.Column="4" Grid.Row="0" Margin="0,1" />

                        <Label Content="{Binding UIString[Adsk.QS.RevTab_09], FallbackValue=Change Description}" Grid.Row="1"/>
                        <ComboBox x:Name="cmbChangeDescr" ItemsSource="{Binding Prop[_XLTN_CHANGEDESCR].ListValues}" Text="{WPF:ValidatedBinding Prop[_XLTN_CHANGEDESCR].Value}" SelectedValue="{Binding Prop[_XLTN_CHANGEDESCR].Value}" IsEditable="True" IsEnabled="{Binding PsVal[InvertReadOnly]}" Grid.Column="1" Height="Auto" Grid.Row="1" Grid.ColumnSpan="4" Margin="0,1" />
                    </Grid>
                    <Grid x:Name="grdCustomerApproval" Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="140"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition MinWidth="140"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="28"/>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_11], FallbackValue=Customer Approved By}" Grid.Column="0"/>
                        <TextBox x:Name="txtApprovedBy" Text="{WPF:ValidatedBinding Prop[_XLTN_CUSTAPPRVDBY].Value}" Height="Auto" Grid.Column="1" Margin="0,1"/>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_12], FallbackValue=Cust. Approved Date}" Grid.Column="3"/>
                        <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[_XLTN_CUSTAPPRVDDATE].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}, UpdateSourceTrigger=PropertyChanged}" Grid.Column="4" Height="Auto" Margin="0,1" />
                    </Grid>
                    <Grid x:Name="ButtonGridTabRevision" Grid.Row="6" Grid.ColumnSpan="2" Margin="0,15,2,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnOK2" Content="{Binding UIString[BTN1], FallbackValue=OK}" Command="{Binding CloseWindowCommand, ElementName=FileWindow}" IsEnabled="{Binding Properties.IsValid}" Grid.Column="2" Width="80" Height="24" IsDefault="True" />
                        <Button x:Name="btnEsc2" Content="{Binding UIString[BTN2], FallbackValue=Esc}" Command="{Binding CancelWindowCommand, ElementName=FileWindow}" Grid.Column="4" Width="80" HorizontalAlignment="Right" Height="24" IsCancel="True" />
                        <Button x:Name="btnHelp2" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" Command="{Binding PsCmd[mHelp(500)]}" Height="24" ToolTip="F1" Margin="0" Width="80" />
                    </Grid>
                </Grid>
            </AdornerDecorator>
        </TabItem>
        <TabItem x:Name="tabItemProperties" Header="{Binding UIString[Adsk.QS.ItemSearch_28], FallbackValue=Assigned Item}">
            <AdornerDecorator>
                <Grid x:Name="grdAssignedItemMain" Width="{Binding ActualWidth, ElementName=grdMain, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" Margin="5,10,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="grdStatus">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnAssignedItemRefresh" Command="{Binding PsCmd[mGetItemByFileFromVault]}">
                            <Image StretchDirection="DownOnly">
                                <Image.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\Refresh_16.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\Refresh_16.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Button>
                        <TextBox x:Name="txtAssignedItemStatus" Grid.Column="1" Height="Auto" TextWrapping="Wrap" Background="#FFFFFFE1" Foreground="Black" BorderThickness="1" Padding="5,0,0,0" MinHeight="24"/>
                    </Grid>
                    <Grid x:Name="grdItemSysProps" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="130"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="130"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="lblItemRevision" Content="{Binding UIString[LBL12], FallbackValue=Revision}"/>
                        <TextBox x:Name="txtItemRevision" Grid.Column="1" IsReadOnly="True" Margin="0,1" BorderThickness="1" />
                        <Label x:Name="lblItemNumber" Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Row="1"/>
                        <TextBox x:Name="txtItemTitle1" Grid.Column="1" Grid.Row="2" IsReadOnly="True" Margin="0,1" />
                        <TextBox x:Name="txtItemDescription1" Grid.Column="1" Grid.Row="3" IsReadOnly="True" Margin="0,1" />
                        <TextBox x:Name="txtItemUnits1" Grid.Column="1" Grid.Row="4" IsReadOnly="True" Margin="0,1" />
                        <TextBox x:Name="txtItemNumber" Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" IsReadOnly="True" Margin="0,1" />
                        <Label x:Name="lblItemTitle" Content="{Binding UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title}" Grid.Row="2"/>
                        <TextBox x:Name="txtItemTitle" Grid.Column="1" Grid.Row="2" IsReadOnly="True" Margin="0,1" />
                        <Label x:Name="lblItemDescription" Content="{Binding UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description}" Grid.Row="3"/>
                        <TextBox x:Name="txtItemDescription" Grid.Column="1" Grid.Row="3" IsReadOnly="True" Margin="0,1" />
                        <Label x:Name="lblItemUnits" Content="{Binding UIString[Adsk.QS.ItemSearch_23], FallbackValue=Units}" Grid.Row="4" BorderThickness="1"/>
                        <TextBox x:Name="txtItemUnits" Grid.Column="1" Grid.Row="4" IsReadOnly="True" Margin="0,1" />
                        <Border x:Name="brdItemThumbnail" Grid.Column="2" Grid.RowSpan="4" BorderThickness="1" Margin="5,0" Height="96" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}">
                            <Image x:Name="ItemThumbnail"/>
                        </Border>
                        <Label x:Name="lblItemCategory" Content="{Binding UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category Name}" BorderThickness="1,1,1,0" Grid.Column="3"/>
                        <TextBox x:Name="txtItemCategory" Grid.Column="4" IsReadOnly="True" Margin="0,1" />
                        <Label x:Name="lblItemLfcState" Content="{Binding UIString[LBL14], FallbackValue=Lifecycle State}" Grid.Column="3" Grid.Row="1"/>
                        <TextBox x:Name="txtItemLfcState" Grid.Column="4" Grid.Row="1" IsReadOnly="True" Margin="0,1" />
                        <Label x:Name="lblItemLastUpdatedBy" Content="{Binding UIString[Adsk.QS.ItemSearch_24], FallbackValue=Last Updated By}" Grid.Column="3" Grid.Row="2"/>
                        <TextBox x:Name="txtItemLastUpdatedBy" Grid.Column="4" Grid.Row="2" IsReadOnly="True" Margin="0,1" />
                        <Label x:Name="lblItemLastUpdatedDate" Content="{Binding UIString[Adsk.QS.ItemSearch_25], FallbackValue='Last Updated Date                             '}" Grid.Column="3" Grid.Row="3" BorderThickness="1"/>
                        <TextBox x:Name="txtItemLastUpdatedDate" Grid.Column="4" Grid.Row="3" IsReadOnly="True" Margin="0,1" />
                    </Grid>
                    <DataGrid x:Name="dtgrdItemProps" IsReadOnly="True" AutoGenerateColumns="False" CanUserReorderColumns="False" Grid.Row="2" Margin="0,10,0,0" RowHeight="24" SelectionMode="Single" SelectionUnit="CellOrRowHeader">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="ItemPropName" Binding="{Binding Key}" Width="Auto">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding UIString[Adsk.QS.ItemSearch_26], FallbackValue='Property Name'}" FontWeight="Bold"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="ItemPropValue" Binding="{Binding Value}" Width="*">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding UIString[Adsk.QS.ItemSearch_27], FallbackValue=Property Value}" FontWeight="Bold"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </AdornerDecorator>
        </TabItem>
        <TabItem x:Name="tabClassification" Header="{Binding UIString[Adsk.QS.Classification_03], FallbackValue=Classification}" >
            <AdornerDecorator>
                <Grid x:Name="grdClassification" Width="{Binding ActualWidth, ElementName=grdMain, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" Margin="5,10,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="lblActiveClass" Content="{Binding UIString[Adsk.QS.Classification_06], FallbackValue='Active Classification'}" Grid.Row="3" />
                    <TextBox x:Name="txtActiveClass" IsHitTestVisible="False" Height="24" Text="[not bound]" Grid.Row="3" Grid.Column="1" IsReadOnly="True"/>
                    <Label x:Name="lblClassProps" Content="{Binding UIString[Adsk.QS.Classification_07], FallbackValue='Class Properties'}" Grid.Row="5" Height="Auto" BorderThickness="1,1,0,1"/>
                    <Border x:Name="brdwrpclassification2" Grid.ColumnSpan="3" Grid.Column="1" Margin="0,5">
                        <WrapPanel Orientation="Horizontal">
                            <TextBox x:Name="txtSegment" TextWrapping="Wrap" Text="TextBox" HorizontalAlignment="Left" Margin="0,0,2,0" />
                            <TextBox x:Name="txtMainGroup" TextWrapping="Wrap" Text="TextBox" HorizontalAlignment="Left" Margin="0,0,2,0" />
                            <TextBox x:Name="txtGroup" TextWrapping="Wrap" Text="TextBox" HorizontalAlignment="Left" Margin="0,0,2,0" />
                            <TextBox x:Name="txtSubGroup" TextWrapping="Wrap" Text="TextBox" HorizontalAlignment="Left" Margin="0,0,2,0" />
                        </WrapPanel>
                    </Border>
                    <Label x:Name="lblClassHierarchy" Content="{Binding UIString[Adsk.QS.Classification_04], FallbackValue='Class Hierarchy'}" Margin="0,5,0,0"/>
                    <TextBox x:Name="txtClassificationStatus" Height="Auto" TextWrapping="Wrap" Background="#FFFFFFE1" Padding="5,0,0,0" MinHeight="24" Grid.Row="2" Grid.Column="1" Margin="0,1,0,0" />
                    <Button x:Name="btnRemoveClass" Content="{Binding UIString[], FallbackValue=' Remove Classification '}" Command="{Binding PsCmd[mRemoveClassification]}" Grid.Row="3" Grid.Column="2" Margin="2" MinWidth="80"/>
                    <Button x:Name="btnSelectClass" Content=" Select Classification . . ." Command="{Binding PsCmd[mInitializeClsSelection]}" Grid.Column="3" HorizontalAlignment="Left" Width="Auto" Grid.Row="3" Margin="2"/>
                    <DataGrid x:Name="dtgrdClassProps" Grid.Row="5" AutoGenerateColumns="False" Grid.Column="1" SelectionUnit="Cell" Grid.ColumnSpan="3" Margin="0">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="ClassPropName" Binding="{Binding Key, Mode=OneWay}" CellStyle="{StaticResource DynamicDataGridLabelStyle}" Width="Auto">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.Classification_01], FallbackValue=Property Name, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold" />
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="ClassPropValue" Binding="{Binding Value, Mode=OneWay}" CellStyle="{StaticResource ClassificationDataGridCellStyle}" Width="*">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.Classification_02], FallbackValue=Property Value, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold" />
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="ButtonGridTabClassific" Grid.Row="7" Grid.ColumnSpan="4" Margin="0,5,2,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnOK1" Content="{Binding UIString[], FallbackValue=Assign/Update}" ToolTip="Assign/Update classification on close." Command="{Binding PsCmd[mApplyClsAndCloseFileWindow]}" IsEnabled="{Binding IsNotReadonly}" Grid.Column="2" Height="24" IsDefault="True" MinWidth="80" FontWeight="SemiBold" Width="100" />
                        <Button x:Name="btnEsc1" Content="{Binding UIString[BTN2], FallbackValue=Cancel}" Command="{Binding CancelWindowCommand, ElementName=FileWindow}" Grid.Column="4" Width="80" HorizontalAlignment="Right" Height="24" IsCancel="True" />
                        <Button x:Name="btnHelp1" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" Command="{Binding PsCmd[mHelp(500)]}" Height="24" ToolTip="F1" Margin="0" Width="80" />
                    </Grid>
                </Grid>
            </AdornerDecorator>
        </TabItem>
    </TabControl>
</WPF:MainWindow>