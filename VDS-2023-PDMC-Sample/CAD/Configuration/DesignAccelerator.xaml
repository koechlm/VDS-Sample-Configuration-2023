<?xml version="1.0" encoding="utf-8"?>

<WPF:DSWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:WPF="clr-namespace:dataStandard.UI.View;assembly=dataStandard.UI"
              xmlns:wpfUtilities="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.Controls.WPF.Utilities;assembly=Autodesk.DataManagement.Client.Framework.Forms"
              xmlns:winFormTheme="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.SkinUtils;assembly=Autodesk.DataManagement.Client.Framework.Forms"
              xmlns:share="clr-namespace:dataStandard.UI.ViewModel;assembly=dataStandard.UI"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              mc:Ignorable="d"
              Style="{DynamicResource ThemedWindowStyle}"
              Name="InventorDesignAcceleratorWindow"
              Title="{Binding UIString[LBL50]}"
              ResizeMode="NoResize" SizeToContent="WidthAndHeight">
    <WPF:DSWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Autodesk.DataManagement.Client.Framework.Forms;component/Controls/WPF/ControlTemplates/MergedResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--#region themed styles for CAD dialog standard controls-->
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource ThemedLabelStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#ff0000" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ThemedTextBoxStyle}">
                <Setter Property="Height" Value="24" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="4,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                        <Setter Property="BorderBrush" Value="Red" />
                    </Trigger>
                    <Trigger Property="Validation.HasError" Value="false">
                    </Trigger>
                    <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ThemedComboBoxStyle}">
                <Setter Property="Height" Value="24"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ThemedComboBoxItemStyle}"/>
            <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource ThemedDatePickerStyle}">
                <Setter Property="Height" Value="24"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="5,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButtonStyle}" />
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ThemedCheckBoxStyle}"/>
            <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ThemedContextMenu}"/>
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ThemedDataGridStyle}"/>
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ThemedGroupBoxStyle}"/>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ThemedExpanderStyle}" />
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ThemedRadioButtonBaseStyle}"/>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ThemedScrollViewerStyle}" />
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ThemedTextBlockStyle}"/>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ThemedTabControlStyle}"/>
            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ThemedListBoxStyle }" />
            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ThemedListBoxItemStyle}"/>
            <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource ThemedBorderStyle}"/>
            <!--#endregion themed styles for CAD dialog standard controls-->
            <Style x:Key="NumberingGridStyle" TargetType="{x:Type Grid}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Default}">
                        <Setter Property="Background" Value="#FFCDCDCD"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                        <Setter Property="Background" Value="#FF2E3440"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                        <Setter Property="Background" Value="#d9d9d9"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>            
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </WPF:DSWindow.Resources>
    <WPF:DSWindow.InputBindings>
        <!--<KeyBinding Key="F1" Command="{Binding PsCmd[mHelp(120)]}" />-->
    </WPF:DSWindow.InputBindings>
    <Grid x:Name="grdMain" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="130*" />
            <RowDefinition Height="33*" />
            <RowDefinition Height="40*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"
                              MinWidth="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <!--Grid for DSNumSchmCtrl-->
        <Grid x:Name="grdNumbering" Grid.ColumnSpan="2" Margin="0,0,0,10" Style="{StaticResource NumberingGridStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="140" Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="200" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Label x:Name="lblNumbering" Content="{Binding UIString[LBL10], FallbackValue=Numbering}"
                   Visibility="{Binding Visibility, ElementName=NumSchms}" />
            <ComboBox x:Name="NumSchms" DisplayMemberPath="Name" SelectedIndex="0"
                ItemsSource="{Binding PsList[GetNumSchms], Mode=OneTime}" Grid.Column="1"
                IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}" />
            <Label Grid.Row="1" Grid.Column="0" Content="{Binding UIString[LBL31], FallbackValue=Number}"
                   Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" />
            <WPF:DSNumSchemeCtrl x:Name="DSNumSchmsCtrl" Grid.Row="1" Grid.Column="1"
                                 Scheme="{Binding SelectedItem, ElementName=NumSchms}"
                                 Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 GeneratedNumberProperty="DocNumber" />
        </Grid>
        <!--Grid for DocumentTypes-->
        <Grid x:Name="grdLeft" Grid.Column="0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Expander Header="{Binding UIString[LBL51]}" ToolTip="{Binding UIString[LBL52]}" IsExpanded="{Binding ActiveSelectionIsDesignAcceleratorAssemblies, Mode=OneTime}">
                <ListBox x:Name="lstDaAssies" SelectionMode="Extended" share:SharedSelectionGroup.ShareSelection="DesignAcceleratorAssemblies"
                    ItemsSource="{Binding DesignAcceleratorAssemblies}" />
            </Expander>
            <Expander Grid.Row="1" Header="{Binding UIString[LBL53]}" ToolTip="{Binding UIString[LBL53]}" IsExpanded="{Binding ActiveSelectionIsDesignAcceleratorParts, Mode=OneTime}">
                <ListBox x:Name="lstDaComp" SelectionMode="Extended" share:SharedSelectionGroup.ShareSelection="DesignAcceleratorParts"
                    ItemsSource="{Binding DesignAcceleratorParts}" />
            </Expander>
        </Grid>
        <!--Grid for Data Sheet-->
        <Border Grid.Column="1"
        	Grid.Row="1" MaxWidth="750" Margin="5,0,0,0" >
            <Grid x:Name="grdRight">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" MinWidth="140" />
                    <ColumnDefinition Width="2*" MinWidth="320" />
                </Grid.ColumnDefinitions>
                <Label x:Name="lblTitle" Content="{Binding UIString[Title], FallbackValue=Title}"
        			Grid.Column="0" Grid.Row="0" />
                <TextBox x:Name="txtTitle" Text="{WPF:ValidatedBinding Prop[Title].Value}" 
                    Grid.Column="1" Grid.Row="0" Margin="0,0,1,0" />
                <Label x:Name="lblDescription" Content="{Binding UIString[Description], FallbackValue=Description}"
        			Grid.Column="0" Grid.Row="1" />
                <TextBox x:Name="Description" Text="{Binding Prop[Description].Value}" AcceptsReturn="True" 
        			Grid.Column="1" Grid.Row="1" Margin="0,0,1,0" />
                <Label x:Name="lblPartNumber" Content="{Binding UIString[PartNumber], FallbackValue=Part Number}"
        			Grid.Column="0" Grid.Row="2" />
                <TextBox x:Name="txtPartNumber" Text="{Binding Prop[Part Number].Value}"
                    Grid.Column="1" Grid.Row="2" Margin="0,0,1,0" />
                <Label x:Name="lblStockNumber" Content="{Binding UIString[StockNumber], FallbackValue=Stock Number}"
        			Grid.Column="0" Grid.Row="3" />
                <TextBox x:Name="txtStockNumber"
        			Text="{Binding Prop[Stock Number].Value, UpdateSourceTrigger=PropertyChanged}"
        			Grid.Column="1" Grid.Row="3" Margin="0,0,1,0" />
                <Label x:Name="lblFileName" Content="{Binding UIString[LBL6], FallbackValue=File Name}" 
                    Grid.Row="4" Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}"/>
                <TextBox x:Name="FILENAME" Grid.Row="4" Grid.Column="1"
        			IsEnabled="{Binding SingleElementIsSelected}"
        			Text="{WPF:ValidatedBinding Prop[DocNumber].Value}"
        			Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" Margin="0,0,1,0" />
            </Grid>
        </Border>
        <!--End Grid for Data Sheet-->
        <GroupBox x:Name="GroupPath" Header="{Binding UIString[LBL5], FallbackValue=Path}" Grid.Row="2" Grid.ColumnSpan="2" BorderThickness="0"
            ToolTip="{Binding UIString[TLT1]}" Margin="-5,0,0,0">
            <TextBox Text="{Binding PathAndFileNameHandler.Path}"
                IsReadOnly="True" BorderThickness="1" Margin="0,0,-6,0" />
        </GroupBox>
        <Grid x:Name="grdButton" Grid.ColumnSpan="2" Grid.Row="3" Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80" />
                <ColumnDefinition MinWidth="50" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <Button x:Name="btnOK" Command="{Binding CloseWindowCommand, ElementName=InventorDesignAcceleratorWindow}"
                    IsEnabled="{Binding IsValid}"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="{Binding UIString[LBL35]}"
                    Content="{Binding UIString[BTN1], FallbackValue=OK}" Height="24" IsDefault="True" MinWidth="80"
                    Grid.Column="2" Margin="10,3" />
            <Button x:Name="btnCancel"
                    Command="{Binding CancelWindowCommand, ElementName=InventorDesignAcceleratorWindow}"
                    Content="{Binding UIString[BTN2], FallbackValue=Esc}" Height="24" IsCancel="True" MinWidth="80"
                    Grid.Column="3" HorizontalAlignment="Right" Margin="10,3" Grid.ColumnSpan="2" />
        </Grid>
    </Grid>
</WPF:DSWindow>