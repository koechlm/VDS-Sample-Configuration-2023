<?xml version="1.0" encoding="utf-8"?>

<WPF:DSWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:WPF="clr-namespace:dataStandard.UI.View;assembly=dataStandard.UI"
            xmlns:wpfUtilities="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.Controls.WPF.Utilities;assembly=Autodesk.DataManagement.Client.Framework.Forms"
            xmlns:winFormTheme="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.SkinUtils;assembly=Autodesk.DataManagement.Client.Framework.Forms"
            xmlns:system="clr-namespace:System;assembly=mscorlib"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
            Style="{DynamicResource ThemedWindowStyle}"
            x:Name="InventorWindow" ShowInTaskbar="True" ResizeMode="NoResize" SizeToContent="WidthAndHeight">
    <WPF:DSWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Autodesk.DataManagement.Client.Framework.Forms;component/Controls/WPF/ControlTemplates/MergedResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <WPF:IsMoreThanZeroConverter x:Key="MoreThanZeroConverter"/>
            <WPF:InverseBoolConverter x:Key="BoolConvert"/>
            <WPF:MultiBooleanConverter x:Key="booleanAndConverter" Mode="And" />
            <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ThemedDataGridCellStyle}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Typ}" Value="String">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" CharacterCasing="{Binding Case}" Padding="5,0,0,0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Double">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Boolean" >
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" IsEditable="True">
                                        <ComboBoxItem Content="True" />
                                        <ComboBoxItem Content="False" />
                                    </ComboBox>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Decimal">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Int32">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0"
                                         Height="25" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListValues.Count, Converter={StaticResource MoreThanZeroConverter}}" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value, StringFormat=N}"
                                     IsEditable="{Binding EnforceListValues, Converter={StaticResource BoolConvert}}" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Material">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                  IsEditable="False" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ThemedDataGridCellStyle}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False"/>
            </Style>
            <!--#region themed styles for CAD dialog standard controls-->
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource ThemedLabelStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#ff0000" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ThemedTextBoxStyle}">
                <Setter Property="Height" Value="24" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="4,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                        <Setter Property="BorderBrush" Value="Red" />
                    </Trigger>
                    <Trigger Property="Validation.HasError" Value="false">
                    </Trigger>
                    <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ThemedComboBoxStyle}">
                <Setter Property="Height" Value="24"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ThemedComboBoxItemStyle}"/>
            <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource ThemedDatePickerStyle}">
                <Setter Property="Height" Value="24"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="5,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButtonStyle}" />
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ThemedCheckBoxStyle}"/>
            <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ThemedContextMenu}"/>
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ThemedDataGridStyle}"/>
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ThemedGroupBoxStyle}"/>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ThemedExpanderStyle}" />
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ThemedRadioButtonBaseStyle}"/>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ThemedScrollViewerStyle}" />
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ThemedTextBlockStyle}"/>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ThemedTabControlStyle}"/>
            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ThemedListBoxStyle }" />
            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ThemedListBoxItemStyle}"/>
            <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource ThemedBorderStyle}"/>
            <!--#endregion themed styles for CAD dialog standard controls-->
            <Style x:Key="ButtonGridStyle" TargetType="{x:Type Grid}">
                <Setter Property="Margin" Value="0,15,2,5" />
            </Style>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </WPF:DSWindow.Resources>
    <Grid x:Name="grdMain" MinWidth="900"
          Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" ToolTip="Folder / Project" />
            <RowDefinition Height="Auto" ToolTip="{Binding UIString[LBL73], FallbackValue='General Properties'}" />
            <RowDefinition ToolTip="Resulting Path" Height="Auto" />
            <RowDefinition ToolTip="Buttons" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <GroupBox x:Name="GroupFolder" Grid.ColumnSpan="2" Margin="-5,0,0,5" BorderThickness="0" Header="{Binding UIString[LBL1], FallbackValue=Folder}"
                  Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}">
            <WrapPanel x:Name="BreadCrumb" Height="Auto"
                       ItemWidth="165" Margin="1,0,0,0">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ThemedComboBoxStyle}">
                        <Setter Property="Margin" Value="-1,0,0,0" />
                        <Setter Property="ToolTip"
                                Value="{Binding SelectedValue.Name, RelativeSource={RelativeSource Self}}" />
                    </Style>
                </WrapPanel.Resources>
            </WrapPanel>
        </GroupBox>
        <Grid x:Name="grdGeneralProps" Grid.Row="1"
              ToolTip="{Binding UIString[LBL73], FallbackValue='General Properties'}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Label Content="{Binding UIString[LBL8], FallbackValue=Category}" Grid.Row="0" Grid.Column="0" />
            <ComboBox x:Name="Categories" Grid.Row="0" Grid.Column="1"
                      DisplayMemberPath="Name"
                      SelectedItem="{Binding DynamicPropertiesCategory}"
                      SelectedValuePath="Name"
                      SelectedValue="{Binding Prop[_Category].Value}"
                      ItemsSource="{Binding PsList[GetCategories], Mode=OneTime}"
                      IsEnabled="{Binding CreateMode}" Margin="0,1"/>
            <Label Grid.Row="1" Grid.Column="0" Content="{Binding UIString[LBL10], FallbackValue=Number Scheme}"
                   Visibility="{Binding Visibility, ElementName=NumSchms}"  />
            <ComboBox x:Name="NumSchms" Grid.Column="1" Grid.Row="1"
                      DisplayMemberPath="Name"
                      SelectedValuePath="Name"
                      SelectedValue="{Binding Prop[_NumSchm].Value}"
                      ItemsSource="{Binding PsList[GetNumSchms]}"
                      IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                      Visibility="{Binding NotEditMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,1" />
            <Label Grid.Row="2" Grid.Column="0" Content="{Binding UIString[LBL31], FallbackValue=Number}"
                   Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" />
            <WPF:DSNumSchemeCtrl x:Name="DSNumSchmsCtrl" Grid.Row="2" Grid.Column="1"
                                 Scheme="{Binding SelectedItem, ElementName=NumSchms}"
                                 IsEnabled="{Binding IsEnabled, ElementName=NumSchms}"
                                 GeneratedNumberProperty="DocNumber"
                                 Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,1" />
            <Label Content="{Binding UIString[LBL6], FallbackValue=File Name}" 
                   Grid.Row="3" Grid.Column="0" Visibility="{Binding Visibility, ElementName=FILENAME }" />
            <TextBox x:Name="FILENAME" Grid.Row="3" Grid.Column="1"                
               Text="{WPF:ValidatedBinding Prop[DocNumber].Value}"
               IsReadOnly="{Binding EditMode}"
               Visibility="{Binding NumSchmFieldsEmpty, ElementName=DSNumSchmsCtrl, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,1" />
            <Label x:Name="lblComments" Content="{Binding UIString[Comments], FallbackValue=Comments}" Grid.Row="4" />
            <TextBox x:Name="txtComments" Grid.Column="1" Grid.Row="4" TextWrapping="Wrap" Text="{Binding Prop[Comments].Value}"  
                     VerticalContentAlignment="Top" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="50" Margin="0,1" />
            <Border
                Visibility="{Binding CopyMode, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="5"
                Margin="0,1" Grid.ColumnSpan="2">
                <Image Source="{Binding Prop[Thumbnail].Value}" Width="200"/>
            </Border>
        </Grid>
        <Grid x:Name="DSDynCatPropGrid" MinHeight="80" Grid.Column="1" Margin="5,0,0,0" Grid.Row="1"
              ToolTip="{Binding UIString[LBL63], FallbackValue='Category Properties'}">
            <DataGrid x:Name="DSDynamicCategoryProperties"
                AutoGenerateColumns="False"
                HeadersVisibility="Column"
                ItemsSource="{Binding DynamicProperties}"
                ScrollViewer.CanContentScroll="False"
                IsReadOnly="True"
                EnableRowVirtualization="False"
                MaxHeight="350" VerticalAlignment="Top">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding DispName}"
                        CellStyle="{StaticResource DynamicDataGridLabelStyle}" 
                        Width="*" IsReadOnly="True">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Text="{Binding DataContext.UIString[LBL64], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="22" FontWeight="Bold" />
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn Header="Property Value"
                        CellStyle="{StaticResource DynamicDataGridCellStyle}" Width="2*">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Text="{Binding DataContext.UIString[LBL65], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="22" FontWeight="Bold" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <GroupBox x:Name="GroupPath" Header="{Binding UIString[LBL5], FallbackValue=Path}" Grid.Row="2" Grid.ColumnSpan="2" BorderThickness="0"
                  Margin="-5,0,0,0" ToolTip="{Binding UIString[TLT1], FallbackValue='Local Path'}">
            <TextBox Text="{Binding PathAndFileNameHandler.Path}"
                     IsReadOnly="True"
                     BorderThickness="1" Margin="0,0,-6,0" />
        </GroupBox>
        <Grid x:Name="ButtonGrid" VerticalAlignment="Bottom" Style="{StaticResource ResourceKey=ButtonGridStyle}"
              Grid.ColumnSpan="2" Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="80" />
            </Grid.ColumnDefinitions>
            <Button Command="{Binding CloseWindowCommand, ElementName=InventorWindow}"
                    Grid.Column="2" Margin="0,5,0,5"
                    Width="80" HorizontalAlignment="Right" VerticalAlignment="Center"
                    ToolTipService.ShowOnDisabled="True" ToolTip="{Binding UIString[LBL35], FallbackValue=Cancel}"
                    Content="{Binding UIString[BTN1], FallbackValue=OK}" Height="24" IsDefault="True">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource booleanAndConverter}" Mode="OneWay">
                        <Binding Path="Properties.IsValid" />
                        <Binding Path="IsValid" ElementName="DSNumSchmsCtrl" />
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
            <Button Grid.Column="4" Width="80" HorizontalAlignment="Right" Margin="0,5,0,5" Height="24"
                    VerticalAlignment="Center" Command="{Binding CancelWindowCommand, ElementName=InventorWindow}"
                    IsCancel="true" Content="{Binding UIString[BTN2], FallbackValue=Cancel}" />
        </Grid>
    </Grid>
</WPF:DSWindow>