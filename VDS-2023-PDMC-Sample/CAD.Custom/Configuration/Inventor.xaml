<?xml version="1.0" encoding="utf-8"?>

<WPF:DSWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:WPF="clr-namespace:dataStandard.UI.View;assembly=dataStandard.UI"
    xmlns:wpfUtilities="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.Controls.WPF.Utilities;assembly=Autodesk.DataManagement.Client.Framework.Forms"
    xmlns:winFormTheme="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.SkinUtils;assembly=Autodesk.DataManagement.Client.Framework.Forms"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
    Style="{DynamicResource ThemedWindowStyle}"
    x:Name="InventorWindow" ResizeMode="NoResize" SizeToContent="WidthAndHeight" >
    <WPF:DSWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Autodesk.DataManagement.Client.Framework.Forms;component/Controls/WPF/ControlTemplates/MergedResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <WPF:IsMoreThanZeroConverter x:Key="MoreThanZeroConverter"/>
            <WPF:InverseBoolConverter x:Key="BoolConvert"/>
            <WPF:MultiBooleanConverter x:Key="booleanAndConverter" Mode="And" />
            <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Typ}" Value="String">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" CharacterCasing="{Binding Case}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short" BorderThickness="0"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Double">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0"
                                         Height="25" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Boolean">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True" BorderThickness="0">
                                        <ComboBoxItem Content="True" />
                                        <ComboBoxItem Content="False" />
                                    </ComboBox>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Decimal">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0"
                                         Height="25" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Typ}" Value="Int32">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0"
                                         Height="25" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListValues.Count, Converter={StaticResource MoreThanZeroConverter}}" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value, StringFormat=N}"
                                    IsEditable="{Binding EnforceListValues, Converter={StaticResource BoolConvert}}" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Material">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                  IsEditable="False" BorderThickness="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Name}" Value="Material"/>
                            <Condition Binding="{Binding DataContext.Prop[_Category].Value, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="Weldment Assembly"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                  IsEditable="False" BorderThickness="0" IsHitTestVisible="False"  ToolTipService.ShowOnDisabled="True" ToolTip="Weldment Material derives from weld bead material setting."/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Part Number">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" 
                                    ToolTip="{Binding DataContext.UIString[LBL27], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, FallbackValue='[Assigned]'}" 
                                    IsReadOnly="True" IsTabStop="False"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ThemedDataGridCellStyle}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Style>
            <Style x:Key="DynamicDataGridBtnCellStyle" TargetType="{x:Type DataGridCell}">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
                <Setter Property="Width" Value="Auto"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Name}" Value="Part Number">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Part_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                       CommandParameter="Part Number" HorizontalAlignment="Stretch"
                                    ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue='Expand Item Query Builder', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" BorderThickness="1" MinWidth="20" VerticalAlignment="Center">
                                    </Button>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Stock Number">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Stock_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                       CommandParameter="Stock Number" HorizontalAlignment="Stretch"
                                    ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue='Expand Item Query Builder', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" BorderThickness="1" MinWidth="20" VerticalAlignment="Center"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Title">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content=" . . . " Command="{Binding DataContext.PsCmd[mInitializeTermCatalog], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    ToolTip="{Binding DataContext.UIString[ClassTerms_TT05], FallbackValue='Select from Catalog...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" 
                                    IsTabStop="False" MinWidth="20" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                    </Button>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Name}" Value="Document Code">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Button Content=" . . . " Command="{Binding DataContext.PsCmd[mInitializeIEC61355], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    ToolTip="{Binding DataContext.UIString[Adsk.IEC61355.TT01], FallbackValue='Select from ISO 61355 classification scheme.', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" 
                                    IsTabStop="False" MinWidth="20" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                    </Button>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--#region themed styles for CAD dialog standard controls-->
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource ThemedLabelStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#ff0000" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ThemedTextBoxStyle}">
                <Setter Property="Height" Value="24" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="4,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                        <Setter Property="BorderBrush" Value="Red" />
                    </Trigger>
                    <Trigger Property="Validation.HasError" Value="false">
                    </Trigger>
                    <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ThemedComboBoxStyle}">
                <Setter Property="Height" Value="24"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ThemedComboBoxItemStyle}"/>
            <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource ThemedDatePickerStyle}">
                <Setter Property="Height" Value="24"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="5,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButtonStyle}" />
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ThemedCheckBoxStyle}"/>
            <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ThemedContextMenu}"/>
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ThemedDataGridStyle}"/>
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ThemedGroupBoxStyle}"/>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ThemedExpanderStyle}" />
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ThemedRadioButtonBaseStyle}"/>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ThemedScrollViewerStyle}" />
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ThemedTextBlockStyle}"/>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ThemedTabControlStyle}"/>
            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ThemedListBoxStyle }" />
            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ThemedListBoxItemStyle}"/>
            <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource ThemedBorderStyle}"/>
            <!--#endregion themed styles for CAD dialog standard controls-->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style x:Key="btnScEnabled" TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButtonStyle}">
                <Setter Property="IsEnabled" Value="True" />
                <Setter Property="ToolTip" Value="{Binding UIString[MSDCE_TT20]}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Text, ElementName=txtNewShortCut}" Value="">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="btnScImage" TargetType="Image">
                <Setter Property="Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\Plus_disabled.ico"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled, ElementName=btnNewSc}" Value="True">
                        <Setter Property="Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\Plus.ico"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="btnVaultBrowseStyle" TargetType="Image">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=CurrentTheme, 
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Default}">
                        <Setter Property="Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\FolderView_32.ico"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                        <Setter Property="Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\FolderView_32.ico"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme, 
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                        <Setter Property="Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\FolderView_32.png"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="grdShortCutPaneStyle" TargetType="{x:Type Grid}" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding EditMode}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding CreateMode}" Value="True"/>
                            <Condition Binding="{Binding IsChecked, ElementName=GFN4Special}" Value="False"/>
                            <Condition Binding="{Binding PathAndFileNameHandler.EXT}" Value="IDW"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding CreateMode}" Value="True"/>
                            <Condition Binding="{Binding IsChecked, ElementName=GFN4Special}" Value="False"/>
                            <Condition Binding="{Binding PathAndFileNameHandler.EXT}" Value="DWG"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding CreateMode}" Value="True"/>
                            <Condition Binding="{Binding IsChecked, ElementName=GFN4Special}" Value="False"/>
                            <Condition Binding="{Binding PathAndFileNameHandler.EXT}" Value="IPN"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </WPF:DSWindow.Resources>
    <WPF:DSWindow.InputBindings>
        <KeyBinding Key="F1" Command="{Binding PsCmd[mHelp(100)]}"/>
    </WPF:DSWindow.InputBindings>
    <Grid x:Name="grdMain" Margin="5,5,5,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" ToolTip="Folder / Project" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" ToolTip="{Binding UIString[LBL73], FallbackValue='General Properties'}" />
            <RowDefinition ToolTip="Resulting Path" Height="Auto" />
            <RowDefinition ToolTip="Buttons" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <GroupBox x:Name="GroupFolder" Grid.ColumnSpan="2" Margin="-7,0,0,5" BorderThickness="0" Header="{Binding UIString[LBL1], FallbackValue=Folder}" MaxWidth="700"
                  Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="1">
            <Grid Margin="0,3,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button x:Name="btnVaultBrowser" Command="{Binding PsCmd[mVaultBrowser]}" Height="24" Width="24" Margin="0" 
                        HorizontalAlignment="Left" VerticalAlignment="Top" ToolTip="{Binding UIString[ADSK.VLT.FLD.BRWSR_TT], FallbackValue='Open Vault Folder Browser'}" >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Image  Width="Auto" Height="Auto" StretchDirection="DownOnly" Style="{StaticResource btnVaultBrowseStyle}"/>
                    </Grid>
                </Button>
                <WrapPanel x:Name="BreadCrumb"
                    ItemWidth="Auto" Grid.Column="1" Margin="5,0,0,0" >
                    <WrapPanel.Resources>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ThemedComboBoxStyle}">
                            <Setter Property="Margin" Value="-1,0,0,0" />
                            <Setter Property="ToolTip" Value="{Binding SelectedValue.Name, RelativeSource={RelativeSource Self}}" />
                        </Style>
                    </WrapPanel.Resources>
                </WrapPanel>
            </Grid>
        </GroupBox>
        <Grid x:Name="grdGeneralProps"
        	ToolTip="{Binding UIString[LBL73], FallbackValue=General Properties}" Grid.ColumnSpan="2" Grid.Row="1" Grid.Column="1" Margin="0,10,3,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Label Content="{Binding UIString[LBL8], FallbackValue=Category}"
        		Grid.Row="0"
        		Grid.Column="0" />
            <ComboBox x:Name="Categories" Grid.Row="0" Grid.Column="1"
        		DisplayMemberPath="Name"
        		SelectedItem="{Binding DynamicPropertiesCategory}"
        		SelectedValuePath="Name"
        		SelectedValue="{Binding Prop[_Category].Value}"
        		ItemsSource="{Binding PsList[GetCategories], Mode=OneTime}"
        		IsEnabled="{Binding CreateMode}" Margin="0,1" />
            <Label Content="{Binding UIString[LBL10], FallbackValue=Number Scheme}"
        		Grid.Column="2"        		
        		Visibility="{Binding Visibility, ElementName=NumSchms}" Margin="5,0,0,0" />
            <ComboBox x:Name="NumSchms" Grid.Column="3"
        		DisplayMemberPath="Name"
        		SelectedValuePath="Name"
        		SelectedValue="{Binding Prop[_NumSchm].Value}"
        		ItemsSource="{Binding PsList[GetNumSchms], Mode=OneTime}"
        		IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
        		Visibility="{Binding NotEditMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,1" />
            <Label Grid.Row="1" Grid.Column="2" Content="{Binding UIString[LBL31], FallbackValue=Number}"
        		Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" Margin="5,0,0,0" />
            <WPF:DSNumSchemeCtrl x:Name="DSNumSchmsCtrl" Grid.Row="1" Grid.Column="4"
        		Scheme="{Binding SelectedItem, ElementName=NumSchms}"
        		IsEnabled="{Binding IsEnabled, ElementName=NumSchms}"
        		GeneratedNumberProperty="DocNumber"
        		Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,1" />
        </Grid>
        <TabControl x:Name="tabCtrlMain" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Margin="0,10,0,0"  
                    MinHeight="80" MaxWidth="700" >
            <TabItem x:Name="tabProperties" Header="{Binding UIString[LBL63], FallbackValue= 'Category Properties'}">
                <AdornerDecorator>
                    <Grid x:Name="DSDynCatPropGrid" MinHeight="80" MinWidth="694">
                        <DataGrid x:Name="DSDynamicCategoryProperties"
            			AutoGenerateColumns="False"
            			HeadersVisibility="Column"
            			ItemsSource="{Binding DynamicProperties}"
            			ScrollViewer.CanContentScroll="False"
                        IsReadOnly="True"
                        EnableRowVirtualization="False"
                        VerticalAlignment="Top"  MinHeight="260" MaxHeight="350" CanUserReorderColumns="False" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding DispName}" CellStyle="{StaticResource DynamicDataGridLabelStyle}" Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock
            								Text="{Binding DataContext.UIString[LBL64], FallbackValue=Name, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="22" FontWeight="Bold" />
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Property Value" CellStyle="{StaticResource DynamicDataGridCellStyle}" MinWidth="300" Width="2*">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.UIString[LBL65], FallbackValue=Value, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="22" FontWeight="Bold" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Header="Options" CellStyle="{StaticResource DynamicDataGridBtnCellStyle}">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.UIString[ADSK.QS.DynGrid.01], FallbackValue=Options, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem x:Name="tabRevision" Header="{Binding UIString[LBL12], FallbackValue=Revision}">
                <AdornerDecorator>
                    <Grid x:Name="grdRevision" Height="Auto" MinHeight="{Binding ActualHeight, ElementName=DSDynCatPropGrid, Mode=OneWay}" MinWidth="694" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="grdRevSysProps" Grid.ColumnSpan="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="26"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Label x:Name="lblRevision" Content="{Binding UIString[LBL12], FallbackValue=Revision}" Grid.Row="0" Height="Auto"/>
                            <TextBox x:Name="txtRevision" Text="" IsEnabled="False" Grid.Column="1" IsReadOnly="True" Grid.Row="0" Height="Auto" Margin="0,1"/>
                            <Label x:Name="lblStatus" Content="{Binding UIString[LBL4], FallbackValue=Status}" Grid.Row="1" Height="Auto"/>
                            <TextBox x:Name="txtStatus" Text="" IsEnabled="False" Grid.Column="1" Grid.Row="1" IsReadOnly="True" Height="Auto" Margin="0,1" />
                            <Label Content="Latest Released Rev." Grid.Column="3" Height="Auto"/>
                            <Border Grid.Column="4" BorderThickness="0,1,1,0">
                                <CheckBox x:Name="LatestRev" IsChecked="False" IsEnabled="False" VerticalAlignment="Center" Margin="5,0,0,0" />
                            </Border>
                            <Label x:Name="lbLfcDef1" Content="{Binding UIString[Adsk.QS.RevTab_02], FallbackValue=Lifecycle Definition}" Grid.Column="3" Grid.Row="1" Height="Auto"/>
                            <TextBox x:Name="txtLfcDef" Text="" IsEnabled="False" Grid.Column="4" Grid.Row="1" IsReadOnly="True" Height="Auto" Margin="0,1" />
                            <Label Content="{Binding UIString[LBL34], FallbackValue=Created By}" Grid.Row="2" Height="Auto" BorderThickness="1"/>
                            <TextBox x:Name="txtCreatedBy" Text="" IsEnabled="False" Grid.Column="1" Grid.Row="2" IsReadOnly="True" Height="Auto" Margin="0,1" />
                            <Label Content="{Binding UIString[LBL33], FallbackValue=Create Date}" Grid.Row="2" Grid.Column="3" Height="Auto" BorderThickness="1"/>
                            <TextBox x:Name="txtCreateDate" Text="" IsEnabled="False" Grid.Column="4" Grid.Row="2" IsReadOnly="True" Height="Auto" Margin="0,1"/>
                        </Grid>
                        <Grid x:Name="grdApproval" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="5"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="{Binding UIString[], FallbackValue=Checked By}" Grid.Column="0"  Height="Auto"/>
                            <TextBox x:Name="txtCheckedBy" Text="{WPF:ValidatedBinding Prop[Checked By].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto" Grid.Column="1" Margin="0,1"/>
                            <Label Content="{Binding UIString[], FallbackValue=Checked Date}"  Height="Auto" Grid.Column="3"/>
                            <Border BorderThickness="0,1,1,0" Grid.Column="4">
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[Date Checked].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto"  />
                            </Border>
                            <Label Content="{Binding UIString[], FallbackValue=Engr Approved By}" Grid.Column="0" BorderThickness="1" Grid.Row="1" Height="Auto" />
                            <TextBox x:Name="txtEngApprvdBy" Text="{WPF:ValidatedBinding Prop[Engr Approved by].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto" Grid.Column="1" Grid.Row="1" Margin="0,1"/>
                            <Label Content="{Binding UIString[], FallbackValue=Engr Approved Date}" Height="Auto" BorderThickness="1" Grid.Column="3" Grid.Row="1"/>
                            <Border BorderThickness="0,1,1,1" Grid.Column="4" Grid.Row="1">
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[Engr Date Approved].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto" />
                            </Border>
                            <Label Content="{Binding UIString[], FallbackValue=Change Description}" Height="Auto" BorderThickness="1" Grid.Row="3"/>
                            <ComboBox x:Name="cmbChangeDescr"
                                    ItemsSource="{Binding Prop[Change Descr].ListValues}" 
                                    Text="{WPF:ValidatedBinding Prop[Change Descr].Value}" 
                                    SelectedValue="{Binding Prop[Change Descr].Value}"
                                    IsEditable="True" IsEnabled="{Binding PsVal[InvertReadOnly]}"
                                    Height="Auto" Grid.ColumnSpan="4" Grid.Row="3" Grid.Column="1" Margin="0,1" />
                        </Grid>
                        <Grid x:Name="grdCustomerApproval" Grid.Row="6" Visibility="{Binding Prop[Customer Approval Required].Value, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="{Binding UIString[], FallbackValue=Customer Approved By}" Grid.Column="0" Height="Auto" BorderThickness="1"/>
                            <TextBox x:Name="txtApprovedBy" Text="{WPF:ValidatedBinding Prop[Customer Approved By].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto" Grid.Column="1" Margin="0,1"/>
                            <Label Content="{Binding UIString[], FallbackValue=Cust. Approved Date}" Grid.Column="3" BorderThickness="1" Height="Auto"/>
                            <Border BorderThickness="0,1,1,1" Grid.Column="4">
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[Customer Approved Date].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto"  />
                            </Border>
                        </Grid>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem x:Name="tabItemProperties" Header="{Binding UIString[Adsk.QS.ItemSearch_28], FallbackValue=Assigned Item}">
                <AdornerDecorator>
                    <Grid x:Name="grdAssignedItemMain" Height="{Binding ActualHeight, ElementName=DSDynCatPropGrid, Mode=OneWay}" MinWidth="694">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="grdStatus">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btnAssignedItemRefresh" Command="{Binding PsCmd[mGetItemByFileFromVault]}">
                                <Image StretchDirection="DownOnly">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\Refresh_32.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\Refresh_32.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <TextBox x:Name="txtAssignedItemStatus" Grid.Column="1" Height="Auto" TextWrapping="Wrap" Background="#FFFFFFE1" Foreground="Black" BorderThickness="1" Padding="5,0,0,0" MinHeight="24"/>
                        </Grid>
                        <Grid x:Name="grdItemSysProps" Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="130"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label x:Name="lblItemRevision" Content="{Binding UIString[LBL12], FallbackValue=Revision}"/>
                            <TextBox x:Name="txtItemRevision" Grid.Column="1" IsReadOnly="True" Margin="0,1" BorderThickness="1" />
                            <Label x:Name="lblItemNumber" Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Row="1"/>
                            <TextBox x:Name="txtItemTitle1" Grid.Column="1" Grid.Row="2" IsReadOnly="True" Margin="0,1" />
                            <TextBox x:Name="txtItemDescription1" Grid.Column="1" Grid.Row="3" IsReadOnly="True" Margin="0,1" />
                            <TextBox x:Name="txtItemUnits1" Grid.Column="1" Grid.Row="4" IsReadOnly="True" Margin="0,1" />
                            <TextBox x:Name="txtItemNumber" Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" IsReadOnly="True" Margin="0,1" />
                            <Label x:Name="lblItemTitle" Content="{Binding UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title}" Grid.Row="2"/>
                            <TextBox x:Name="txtItemTitle" Grid.Column="1" Grid.Row="2" IsReadOnly="True" Margin="0,1" />
                            <Label x:Name="lblItemDescription" Content="{Binding UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description}" Grid.Row="3"/>
                            <TextBox x:Name="txtItemDescription" Grid.Column="1" Grid.Row="3" IsReadOnly="True" Margin="0,1" />
                            <Label x:Name="lblItemUnits" Content="{Binding UIString[Adsk.QS.ItemSearch_23], FallbackValue=Units}"  Grid.Row="4" BorderThickness="1"/>
                            <TextBox x:Name="txtItemUnits" Grid.Column="1" Grid.Row="4" IsReadOnly="True" Margin="0,1" />
                            <Border x:Name="brdItemThumbnail" Grid.Column="2" Grid.RowSpan="4" BorderThickness="1" Margin="5,0" Height="96" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}">
                                <Image x:Name="ItemThumbnail"/>
                            </Border>
                            <Label x:Name="lblItemCategory" Content="{Binding UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category Name}" BorderThickness="1,1,1,0" Grid.Column="3"/>
                            <TextBox x:Name="txtItemCategory" Grid.Column="4" IsReadOnly="True" Margin="0,1" />
                            <Label x:Name="lblItemLfcState" Content="{Binding UIString[LBL14], FallbackValue=Lifecycle State}" Grid.Column="3" Grid.Row="1"/>
                            <TextBox x:Name="txtItemLfcState" Grid.Column="4" Grid.Row="1" IsReadOnly="True" Margin="0,1" />
                            <Label x:Name="lblItemLastUpdatedBy" Content="{Binding UIString[Adsk.QS.ItemSearch_24], FallbackValue=Last Updated By}" Grid.Column="3" Grid.Row="2"/>
                            <TextBox x:Name="txtItemLastUpdatedBy" Grid.Column="4" Grid.Row="2" IsReadOnly="True" Margin="0,1" />
                            <Label x:Name="lblItemLastUpdatedDate" Content="{Binding UIString[Adsk.QS.ItemSearch_25], FallbackValue='Last Updated Date                             '}" Grid.Column="3" Grid.Row="3" BorderThickness="1"/>
                            <TextBox x:Name="txtItemLastUpdatedDate" Grid.Column="4" Grid.Row="3" IsReadOnly="True" Margin="0,1" />
                        </Grid>
                        <DataGrid x:Name="dtgrdItemProps" IsReadOnly="True" AutoGenerateColumns="False" CanUserReorderColumns="False" Grid.Row="2" Margin="0,10,0,0" RowHeight="24">
                            <DataGrid.Columns>
                                <DataGridTextColumn x:Name="ItemPropName" Binding="{Binding Key}" Width="Auto">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding UIString[Adsk.QS.ItemSearch_26], FallbackValue='Property Name'}"/>
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                                <DataGridTextColumn x:Name="ItemPropValue" Binding="{Binding Value}" Width="*">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding UIString[Adsk.QS.ItemSearch_27], FallbackValue=Property Value}"/>
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </AdornerDecorator>
            </TabItem>
        </TabControl>
        <Grid x:Name="grdFilePath" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" ToolTip="{Binding UIString[MSDCE_TT05]}" Margin="0,5,0,0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="lblFileName" Content="{Binding UIString[LBL6], FallbackValue=File Name}" Visibility="{Binding Visibility, ElementName=FILENAME}" />
            <TextBox x:Name="FILENAME" Grid.Column="1" 	
                    Text="{WPF:ValidatedBinding Prop[DocNumber].Value}" IsEnabled="{Binding CreateMode}" IsReadOnly="{Binding EditMode}"
            		Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" IsTabStop="False"/>
            <Label x:Name="lblPath" Content="{Binding UIString[LBL5], FallbackValue=Path}" Grid.Row="1" ToolTip="{Binding PathAndFileNameHandler.Path}" />
            <TextBox x:Name="txtPath" VerticalAlignment="Stretch" Text="{Binding Prop[Folder].Value}" Grid.Row="1" Grid.Column="1" ToolTip="{Binding PathAndFileNameHandler.Path}" IsReadOnly="True" IsEnabled="False" IsTabStop="False" />
        </Grid>
        <Grid x:Name="ButtonGrid" VerticalAlignment="Bottom" Grid.ColumnSpan="2" Grid.Row="4" Grid.Column="1" Margin="2,15,3,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="80" />
            </Grid.ColumnDefinitions>
            <CheckBox x:Name="GFN4Special" Grid.Column="1" IsEnabled="False" Height="26" VerticalAlignment="Top" Width="26" HorizontalAlignment="Left" Visibility="Collapsed"/>
            <CheckBox x:Name="chkBxIsInvDocuFileType" Grid.Column="1" VerticalAlignment="Top" IsEnabled="False" Width="26" Height="26" Margin="20,0,0,0" HorizontalAlignment="Left" Visibility="Collapsed"/>
            <Button x:Name="btnOK" Command="{Binding CloseWindowCommand, ElementName=InventorWindow}"
                    Grid.Column="2" Width="80" HorizontalAlignment="Right" VerticalAlignment="Center"
                    ToolTipService.ShowOnDisabled="True" ToolTip="{Binding UIString[LBL35], FallbackValue=OK}"
                    Content="{Binding UIString[BTN1], FallbackValue=OK}" Height="24" IsDefault="True" >
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource booleanAndConverter}" Mode="OneWay">
                        <Binding Path="Properties.IsValid" />
                        <Binding Path="IsValid" ElementName="DSNumSchmsCtrl" />
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
            <Button x:Name="btnCancel" Grid.Column="4" Width="80" HorizontalAlignment="Right" Height="24"
                    VerticalAlignment="Center" Command="{Binding CancelWindowCommand, ElementName=InventorWindow}"
                    IsCancel="true" Content="{Binding UIString[BTN2], FallbackValue=Cancel}" />
            <Button x:Name="btnHelp" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" 
                    Command="{Binding PsCmd[mHelp(100)]}" Height="24" ToolTip="F1" />
            <CheckBox Name="RmOrphShts" Content="{Binding UIString[MSDCE_OrphShtOption], FallbackValue='Remove orphaned sheets'}" Grid.Column="1" HorizontalAlignment="Right" Margin="180,5,10,0" VerticalAlignment="Top" 
                      IsChecked="True" ToolTip="{Binding UIString[MSDCE_OrphShtToolTip], FallbackValue='Deletes all sheets without view(s)'}"/>
        </Grid>
        <Grid x:Name="grdShortCutPane" Grid.RowSpan="5" ToolTip="{Binding UIString[MSDCE_TT24]}" Style="{StaticResource grdShortCutPaneStyle}" >
            <GroupBox x:Name="GroupShortcuts" Header="{Binding UIString[MSDCE_LBL88], FallbackValue=Shortcuts}" BorderThickness="0" Padding="0,0,0,-6" Margin="-5,0,10,0">
                <Grid Width="180">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBox x:Name="txtNewShortCut" Grid.Row="0" ToolTip="{Binding UIString[MSDCE_TT20]}" BorderThickness="1" />
                    <Button x:Name="btnNewSc" Grid.Column="1" Grid.Row="0" Width="24" Height="24" FontFamily="Wingdings"
                        FontSize="14" VerticalContentAlignment="Bottom" Margin="2,2,0,2" FontWeight="Bold" Cursor="Hand"
                        ToolTipService.ShowOnDisabled="True" ToolTip="{Binding UIString[MSDCE_TT20]}"
                        Style="{StaticResource btnScEnabled}"
                        Command="{Binding PsCmd[mAddSc]}">
                        <Image x:Name="btnNewScImg" Style="{StaticResource btnScImage}"/>
                    </Button>
                    <ListBox x:Name="lstBoxShortCuts" Grid.Row="1" MinWidth="180" Margin="0" ItemsSource="{Binding PsVal[mReadShortCuts]}" ToolTip="{Binding UIString[MSDCE_TT23]}"  
                        MaxWidth="300" Grid.ColumnSpan="2" DisplayMemberPath="Key" SelectedValuePath="Key" IsSynchronizedWithCurrentItem="False" >
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{Binding UIString[MSDCE_BTN3], FallbackValue=Activate}" Command="{Binding PsCmd[mRemoveSc]}">
                                    <MenuItem.Icon>
                                        <Image Source="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\cancel.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                </Grid>
            </GroupBox>
        </Grid>
        <Expander x:Name="expItemMasterSearch" Grid.Column="4" Header="" Grid.RowSpan="5" ExpandDirection="Right" Visibility="Collapsed" IsExpanded="False" Margin="10,0,0,0" MaxHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}">
            <Border BorderThickness="1">
                <Grid x:Name="grdItemSearchMain" Margin="10,0,0,0" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="200"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="grdItemSearchHeader" Grid.ColumnSpan="4" Margin="0,0,0,5">
                        <Grid.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                        <Setter Property="Grid.Background" Value="#FF2E3440" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                        <Setter Property="Grid.Background" Value="#FFEEEEEE" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Image HorizontalAlignment="Left" Width="16" Height="16" Margin="5,0,0,0">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                            <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\ItemMaster_16.png" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                            <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\ItemMaster_16.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock x:Name="lblItemMaster" Text="{Binding UIString[Adsk.QS.ItemSearch_00], FallbackValue=Item Master}" Margin="26,0,0,0" FontSize="14"  Padding="10,5,0,0" VerticalAlignment="Center" Height="27" FontWeight="Bold"/>
                    </Grid>
                    <Label x:Name="lblItemSearchMultipleProp" Content="{Binding UIString[Adsk.QS.ItemSearch_01], FallbackValue=Multiple Properties}" Grid.Row="1" />
                    <Label x:Name="lblItemSearchTitle" Content="{Binding UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title (Item\, ECO)}" Grid.Row="2"/>
                    <TextBox x:Name="txtItemSearchMultipleProp" Grid.Column="1" Grid.Row="1" Margin="0,0,0,1"/>
                    <TextBox x:Name="txtItemSearchTitle" Grid.Column="1" Grid.Row="2" Margin="0,0,0,1"/>
                    <ComboBox x:Name="cmbItemSearchCategory" ItemsSource="{Binding PsList[mGetItemCategories], Mode=OneTime}" Grid.Column="1" Grid.Row="3" IsEditable="True" Margin="0,0,0,1"/>
                    <TextBox x:Name="txtItemSearchNumber" Grid.Column="3" Grid.Row="1" Margin="0,0,0,1"/>
                    <TextBox x:Name="txtItemSearchDescription" Grid.Column="3" Grid.Row="2" Margin="0,0,0,1"/>
                    <ComboBox x:Name="cmbItemSearchMaterial" Grid.Column="3" Grid.Row="3" IsEditable="True" Margin="0,0,0,1"/>
                    <Grid x:Name="grdItemSearchButtons" Grid.Row="4" Grid.ColumnSpan="4" Margin="0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnItemSearch" Command="{Binding PsCmd[mGetItemsBySearchCriterias]}" HorizontalAlignment="Left" Height="24" Margin="0,0,10,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Image Width="16" Height="16" StretchDirection="DownOnly">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\BasicSearchSearched_16.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\BasicSearchSearched_16.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Label Content="{Binding UIString[Adsk.QS.ItemSearch_07], FallbackValue=Search}" Grid.Column="1" Padding="3,0,5,0" />
                            </Grid>
                        </Button>
                        <Button x:Name="btnItemSearchClear" Command="{Binding PsCmd[mItemSearchClear]}" HorizontalAlignment="Left" Height="24" Grid.Column="1" Margin="0,0,10,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Image Width="16" Height="16" StretchDirection="DownOnly">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\BasicSearchNotSearched_16.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\BasicSearchNotSearched_16.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Label Content="{Binding UIString[Adsk.QS.ItemSearch_], FallbackValue=Clear}" Grid.Column="1" Padding="3,0,5,0" />
                            </Grid>
                        </Button>
                    </Grid>
                    <Label x:Name="lblItemSearchCategory" Content="{Binding UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category Name}" Grid.Row="3"/>
                    <Label x:Name="lblItemSearchNumber" Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Column="2" Grid.Row="1" Height="Auto"/>
                    <Label x:Name="lblItemSearchDescription" Content="{Binding UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description}" Grid.Column="2" Grid.Row="2" Height="Auto"/>
                    <Label x:Name="lblItemSearchMaterial" Content="{Binding UIString[LBL75], FallbackValue=Material}" Grid.Column="2" Grid.Row="3" Height="Auto"/>
                    <TextBox x:Name="txtItemSearchResultMsg" Grid.ColumnSpan="4" Grid.Row="5" TextWrapping="Wrap" Text="" Background="#FFFFFFE1" Foreground="Black" BorderThickness="1,1,1,0" VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True"/>
                    <DataGrid x:Name="ItemsFound" AutoGenerateColumns="False" Grid.ColumnSpan="4" Grid.Row="6" 
                    SelectionMode="Single" CanUserResizeRows="False" IsReadOnly="True" MaxHeight="{Binding MaxHeight, ElementName=DSDynCatPropGrid}" RowHeight="24" ColumnHeaderHeight="26">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="ItemSearchNumber" Binding="{Binding Item}" Width="*">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_04], FallbackValue=Number, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="ItemSearchTitle" Binding="{Binding Title}" Width="*">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="ItemSearchDescription" Binding="{Binding Description}" Width="*">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="ItemSearchMaterial" Binding="{Binding Material}" Width="*">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[LBL75], FallbackValue=Material, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="ItemSearchCategory" Binding="{Binding Category}" Width="*">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" FontWeight="Bold"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnItemDataCopy" Grid.Row="7" Margin="0,10" HorizontalAlignment="Center" IsEnabled="False" 
                    Command="{Binding PsCmd[mCopyItemData]}" Grid.ColumnSpan="4" ToolTipService.ShowOnDisabled="True"
                    ToolTip="{Binding UIString[Adsk.QS.ItemSearch_12]}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Image Width="16" Height="16" StretchDirection="DownOnly">
                                <Image.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\CopyDesign_16.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\CopyDesign_16.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <Label x:Name="lblBtnItemDataCopy" Content="{Binding UIString[Adsk.QS.ItemSearch_11], FallbackValue=Copy Item Data}" ToolTip="{Binding UIString[Adsk.QS.ItemSearch_12], FallbackValue=Copy metadata to file property}" Grid.Column="1" BorderThickness="0"/>
                        </Grid>
                    </Button>
                </Grid>
            </Border>
        </Expander>
        <Expander x:Name="expTermSearch" Grid.Column="4" Header="" ExpandDirection="Right" IsExpanded="False" Visibility="Collapsed" Grid.RowSpan="5" MinHeight="350" MaxHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" Margin="0" >
            <Border>
                <Grid x:Name="grdTermCatalog" Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition MaxHeight="350"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid x:Name="grdTermsSearchHeader" Grid.ColumnSpan="4" Margin="0,0,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                            <Setter Property="Grid.Background" Value="#FF2E3440" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                            <Setter Property="Grid.Background" Value="#FFEEEEEE" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Image HorizontalAlignment="Left" Width="24" Height="24" Margin="5,0,0,0">
                                <Image.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\Term-OK.ico" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\Term-OK.ico" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock x:Name="lblTermMaster" Text="{Binding UIString[], FallbackValue='Terms Master'}" Margin="26,0,0,0" FontSize="14"  Padding="10,5,0,0" VerticalAlignment="Center" Height="27" FontWeight="Bold"/>
                        </Grid>
                    </Grid>
                    <GroupBox x:Name="grpClassification" Header="{Binding UIString[ClassTerms_14], FallbackValue=Classification Filter}" Grid.Row="1" >
                        <Grid x:Name="grdContentFilter">
                            <WrapPanel x:Name="wrpClassification" Grid.Row="2">
                                <Button x:Name="btnClsReset" Command="{Binding PsCmd[mResetClassFilter]}" Content="X" FontWeight="Bold" ToolTip="{Binding UIString[ClassTerms_TT07], FallbackValue=Reset Selection}" Foreground="Red" Width="24" Height="24">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Border BorderThickness="1">
                                                <Image x:Name="imgTemplateReset" Source="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\filter-delete.ico" Margin="2" />
                                            </Border>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </WrapPanel>
                        </Grid>
                    </GroupBox>
                    <GroupBox x:Name="grpSearchText" Grid.Row="2" Header="{Binding UIString[ClassTerms_16], FallbackValue=Search Text \= term definition; add Language(s) below to widen scope}" >
                        <Grid x:Name="grdTermSearch" Width="562" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="mSearchTermText" Grid.Column="0" ToolTip="{Binding UIString[ClassTerms_TT06], FallbackValue=Apply * for partial terms}" BorderThickness="1" HorizontalAlignment="Left" Width="250"/>
                            <Button x:Name="btnSearchTerm" Grid.Column="1" Command="{Binding PsCmd[mSearchTerms]}" Margin="3,0,0,0" Height="24" HorizontalAlignment="Left">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Width="16" Height="16" StretchDirection="DownOnly">
                                        <Image.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\BasicSearchSearched_16.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                        <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\BasicSearchSearched_16.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <Label Content="{Binding UIString[ClassTerms_BTN8], FallbackValue=Search}" Padding="3,0,5,0" Grid.Column="1"/>
                                </Grid>
                            </Button>
                        </Grid>
                    </GroupBox>
                    <GroupBox x:Name="grpLanguages" Header="{Binding UIString[ClassTerms_15], FallbackValue=Languages}" Grid.Row="3" >
                        <Grid x:Name="grdLanguages" Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <CheckBox x:Name="chkDE" Content="{Binding UIString[ClassTerms_02], FallbackValue=German}"/>
                            <CheckBox x:Name="chkEN" Content="{Binding UIString[ClassTerms_03], FallbackValue=English}" Grid.Column="1"/>
                            <CheckBox x:Name="chkFR" Content="{Binding UIString[ClassTerms_04], FallbackValue=French}" Grid.Column="2"/>
                            <CheckBox x:Name="chkIT" Content="{Binding UIString[ClassTerms_05], FallbackValue=Italian}" Grid.Column="3"/>
                        </Grid>
                    </GroupBox>
                    <TextBox x:Name="txtTermStatusMsg" Grid.Row="4" TextWrapping="Wrap" HorizontalContentAlignment="Center" VerticalAlignment="Top" 
                                BorderThickness="0" Visibility="Collapsed" Background="#FFF6FB82" Foreground="Black"/>
                    <DataGrid x:Name="dataGrdTermsFound" AutoGenerateColumns="False" IsTabStop="False" IsReadOnly="True" ColumnWidth="*" 
                                ColumnHeaderHeight="26" Cursor="Hand" ClipboardCopyMode="IncludeHeader" 
                                Focusable="False" VerticalScrollBarVisibility="Auto" Grid.Row="5" RowHeight="24" Margin="0,2,0,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Term_DE}" Width="Auto" MinWidth="140">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[ClassTerms_02], FallbackValue=German, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Term_EN}" Width="Auto" MinWidth="140">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[ClassTerms_03], FallbackValue=English, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Term_FR}" Width="Auto" MinWidth="140">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[ClassTerms_04], FallbackValue=French, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Term_IT}" Width="Auto" MinWidth="140">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[ClassTerms_05], FallbackValue=Italian, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding PsCmd[m_SelectTerm]}" Header="{Binding UIString[ClassTerms_BTN9], FallbackValue='Copy Term Data'}" ToolTip="{Binding UIString[ClassTerms_TT00]}" CommandParameter="{Binding SelectedIndex, ElementName=dataGrdTermsFound}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Width="16" Height="16" StretchDirection="DownOnly">
                                            <Image.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                            <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\CopyDesign_16.png" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                            <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\CopyDesign_16.png" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <Label Content="{Binding UIString[ClassTerms_BTN9], FallbackValue=Copy Term Data}" Padding="3,0,5,0" Grid.Column="1" />
                                    </Grid>
                                </MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                    <Grid x:Name="grdButtons" Grid.Row="6" Margin="0,15,0,5">
                        <Button x:Name="btnAdopt" Command="{Binding PsCmd[m_SelectTerm]}" HorizontalAlignment="Center" IsEnabled="False" Height="24" 
                                    ToolTip="{Binding UIString[ClassTerms_TT00]}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Width="16" Height="16" StretchDirection="DownOnly">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsDark\CopyDesign_16.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CurrentTheme, Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                                                    <Setter Property="Image.Source" Value="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\IconsLight\CopyDesign_16.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Label Content="{Binding UIString[ClassTerms_BTN10], FallbackValue=Copy Term Data}" Padding="3,0,5,0" Grid.Column="1" />
                            </Grid>
                        </Button>
                    </Grid>
                </Grid>
            </Border>
        </Expander>
        <Expander x:Name="expIEC61355" Grid.Column="4" Header="" ExpandDirection="Right" IsExpanded="False" Visibility="Collapsed" Grid.RowSpan="4" MinHeight="350" MaxHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" Margin="0">
            <Grid x:Name="grdIEC61355" Background="#FFF0F0F0" Margin="10,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition MaxHeight="350"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TabControl x:Name="tabIEC61355" >
                    <TabItem x:Name="tabIEC61355Search" Header="Search Classes/Examples">
                        <GroupBox x:Name="grpSearchIEC61355" Grid.Row="1" Header="{Binding UIString[], FallbackValue='Search bookmarked tags or any keyword for subclass or document samples'}" BorderBrush="#FFABADB3" Margin="0,5,0,0">
                            <Grid x:Name="grdIEC61355Search" Width="562">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35"/>
                                    <ColumnDefinition Width="141"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <RadioButton x:Name="radioSearchBkmk" Content="Search bookmarks only" Grid.Column="0" IsChecked="True" Margin="0,5" Grid.ColumnSpan="2"/>
                                <RadioButton Content="Search all" Grid.Column="2" Margin="5,5,0,5"/>
                                <TextBox x:Name="txtSearchIEC61355" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" ToolTip="{Binding UIString[], FallbackValue=Remind the Token based search behavior - use * to combine the letters with incomplete numbers or vice versa.}" BorderThickness="1" />
                                <Button x:Name="btnSearchIEC61355" Grid.Column="3" Grid.Row="1" Content="{Binding UIString[], FallbackValue=Search}" Command="{Binding PsCmd[mSearchIEC61355]}" Width="80" Margin="3,0,0,0" BorderBrush="#FFABADB3" Height="24"/>
                            </Grid>
                        </GroupBox>
                    </TabItem>
                    <TabItem x:Name="tabIEC61355Navigate" Header="Navigate Classes" >
                        <GroupBox x:Name="grpIEC61355" Header="{Binding UIString[], FallbackValue=Classification Hierarchy}" Grid.Row="0" BorderBrush="#FFABADB3" MinWidth="574" Margin="0,5,0,0">
                            <Grid x:Name="grdIEC61355Filter">
                                <WrapPanel x:Name="wrpIEC61355" Grid.Row="2">
                                    <Button x:Name="btnIEC61355Reset" Command="{Binding PsCmd[mResetIEC61355BrdCrmb]}" Content="X" FontWeight="Bold" ToolTip="{Binding UIString[ClassTerms_TT07], FallbackValue=Reset Selection}" Foreground="Red" Width="24" Height="24">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Border BorderBrush="#FFABADB3" BorderThickness="1">
                                                    <Image x:Name="imgTemplateReset" Source="C:\ProgramData\Autodesk\Vault 2023\Extensions\DataStandard\Vault.Custom\filter-delete.ico" Margin="2" />
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </WrapPanel>
                            </Grid>
                        </GroupBox>
                    </TabItem>
                </TabControl>
                <TextBox x:Name="txtIEC61355StatusMsg" Grid.Row="3" TextWrapping="Wrap" HorizontalContentAlignment="Center" BorderBrush="#FFE5E5E5" VerticalAlignment="Top" 
                                BorderThickness="0" Visibility="Collapsed" Background="#FFF6FB82"/>
                <DataGrid x:Name="dataGrdIEC61355Found" AutoGenerateColumns="False" IsTabStop="False" IsReadOnly="True" ColumnWidth="*" 
                                HorizontalGridLinesBrush="WhiteSmoke" VerticalGridLinesBrush="WhiteSmoke" ColumnHeaderHeight="26" 
                                AlternatingRowBackground="LightCyan" Background="White" Cursor="Hand" ClipboardCopyMode="IncludeHeader" 
                                Focusable="False" VerticalScrollBarVisibility="Auto" Grid.Row="4" RowHeight="24" Margin="0,5,0,0" MaxWidth="{Binding ActualWidth, ElementName=tabIEC61355, Mode=OneWay}">
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="dtgrdColPath" Binding="{Binding PathCode}" Width="Auto" CanUserResize="False">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Path, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                        <DataGridTextColumn x:Name="dtgrdColCode" Binding="{Binding Code}" Width="Auto" CanUserResize="False">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Code, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                        <DataGridTextColumn x:Name="dtgrdColSubCls" Binding="{Binding SubClass}" Width="Auto" MinWidth="140">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Subclass, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="Auto" TextWrapping="WrapWithOverflow"/>
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                        <DataGridTextColumn x:Name="dtgrdColSubClsDE" Binding="{Binding SubClassDE}" Width="Auto" MinWidth="140">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Subclass DE, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="Auto" TextWrapping="WrapWithOverflow"/>
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                        <DataGridTextColumn x:Name="dtgrdColCmmts" Binding="{Binding Example}" MinWidth="200" Width="Auto">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Examples, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                               TextWrapping="Wrap" Height="Auto"/>
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                        <DataGridTextColumn x:Name="dtgrdColCmmtsDE" Binding="{Binding ExampleDE}" MinWidth="200" Width="Auto">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Examples DE, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                               TextWrapping="Wrap" Height="Auto"/>
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding PsCmd[mApplyIEC61355]}" Header="{Binding UIString[], FallbackValue=Apply Classification}" ToolTip="{Binding UIString[ClassTerms_TT00]}" CommandParameter="{Binding SelectedIndex, ElementName=dataGrdTermsFound}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
                <Grid x:Name="grdIEC61355Buttons" Grid.Row="5" Margin="0,15,0,5">
                    <Button x:Name="btnIEC61355Adopt" Command="{Binding PsCmd[mApplyIEC61355]}" 
                                    Content="{Binding UIString[], FallbackValue=Apply Classification}"                             
                                    HorizontalAlignment="Right" Width="140" IsEnabled="False" Height="24" 
                                    ToolTip="{Binding UIString[]}"/>
                </Grid>
            </Grid>
        </Expander>
    </Grid>
</WPF:DSWindow>