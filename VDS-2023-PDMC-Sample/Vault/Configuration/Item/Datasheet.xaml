<?xml version="1.0" encoding="utf-8"?>
<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            x:Name="MainWindow"
            xmlns:behaviours="clr-namespace:Common.Wpf;assembly=Common"
            xmlns:wpfUtilities="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.Controls.WPF.Utilities;assembly=Autodesk.DataManagement.Client.Framework.Forms"
            xmlns:winFormTheme="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.SkinUtils;assembly=Autodesk.DataManagement.Client.Framework.Forms"
            behaviours:TabTitleBehavior.TabTitle="$UIString[LBL36]"
            xmlns:WPF="clr-namespace:CreateObject.WPF;assembly=CreateObject">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Autodesk.DataManagement.Client.Framework.Forms;component/Controls/WPF/ControlTemplates/MergedResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--#region themed styles for VE datasheet standard controls-->
            <Style x:Key="DataStandardLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource ThemedLabelStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#ff0000" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource DataStandardLabelStyle}"/>
            <Style x:Key="DataStandardTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ThemedTextBoxStyle}">
                <Setter Property="Height" Value="24" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="4,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                        <Setter Property="BorderBrush" Value="Red" />
                    </Trigger>
                    <Trigger Property="Validation.HasError" Value="false">
                    </Trigger>
                    <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DataStandardTextBoxStyle}"/>
            <Style x:Key="Required" TargetType="{x:Type TextBox}" BasedOn="{StaticResource DataStandardTextBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="1,1,1,1" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataStandardComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ThemedComboBoxStyle}">
                <Setter Property="Height" Value="24"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}"/>
            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ThemedComboBoxItemStyle}"/>
            <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource ThemedDatePickerStyle}">
                <Setter Property="Height" Value="24"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="5,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButtonStyle}" />
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ThemedCheckBoxStyle}"/>
            <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ThemedContextMenu}"/>
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ThemedDataGridStyle}"/>
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ThemedGroupBoxStyle}"/>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ThemedExpanderStyle}" />
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ThemedRadioButtonBaseStyle}"/>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ThemedScrollViewerStyle}" />
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ThemedTextBlockStyle}"/>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ThemedTabControlStyle}"/>
            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ThemedListBoxStyle }" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=CurrentTheme, 
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Default}">
                        <Setter Property="BorderBrush" Value="#FFABADB3"/>
                        <Setter Property="Background" Value="WhiteSmoke" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                        <Setter Property="BorderBrush" Value="#FF323A48"/>
                        <Setter Property="Background" Value="#FF454F61" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme, 
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
                        <Setter Property="Background" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ThemedListBoxItemStyle}"/>
            <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Border}" >
                <Setter Property="BorderThickness" Value="1"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Default}">
                        <Setter Property="BorderBrush" Value="#FFBFBBBB"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                        <Setter Property="BorderBrush" Value="#FF323A48"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--#endregion themed styles for VE datasheet standard controls-->
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <Grid x:Name="grdMain" MinWidth="1050">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>
            <Grid Margin="5" Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" MinWidth="140" />
                    <ColumnDefinition Width="2*" MinWidth="280" />
                </Grid.ColumnDefinitions>
                <Label Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Prop[_XLTN_NUMBER].Value}" Grid.Row="0" Grid.Column="1" Margin="0,1" ></TextBox>
                <Label Grid.Row="1" Grid.Column="0" >
                    <Label.Content>
                        <AccessText TextWrapping="Wrap" Text="{Binding UIString[LBL8],FallbackValue=Category}"/>
                    </Label.Content>
                </Label>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Prop[_XLTN_CATEGORY NAME].Value}" Margin="0,1" />
                <Label Grid.Column="0" Grid.Row="2" >
                    <Label.Content>
                        <AccessText TextWrapping="Wrap" Text="{Binding UIString[LBL14],FallbackValue=State}"/>
                    </Label.Content>
                </Label>
                <TextBox Text="{Binding Prop[_XLTN_STATE].Value}" Grid.Column="1" Grid.Row="2" Margin="0,1" />
                <Label Content="{Binding UIString[Title],FallbackValue=Title}" Grid.Column="0" Grid.Row="3" />
                <TextBox Text="{Binding PsVal[ItemTitle], Mode=OneWay}" Grid.Column="1" Grid.Row="3" Margin="0,1" />
                <Label Content="{Binding UIString[Description], FallbackValue=Description}" Grid.Column="0" Grid.Row="4" />
                <TextBox Text="{Binding PsVal[ItemDescription], Mode=OneWay}" Grid.Column="1" Grid.Row="4" Name="Description" MinHeight="50" TextWrapping="Wrap" AcceptsReturn="True" Margin="0,1"/>
                <Label Content="{Binding UIString[LBL7],FallbackValue=Comment}" Grid.Row="5" BorderThickness="1" />
                <TextBox Grid.Row="5" Text="{Binding Prop[_XLTN_COMMENT].Value}" Grid.Column="1" MinHeight="50" TextWrapping="Wrap" AcceptsReturn="True" Margin="0,1" />
            </Grid>
            <Grid Column="1" Margin="5">
                <Border BorderBrush="Transparent" BorderThickness="5" VerticalAlignment="Top" HorizontalAlignment="Center">
                    <Image VerticalAlignment="Center" Width="120"  Source="{Binding Prop[_XLTN_THUMBNAIL].Value}"></Image>
                </Border>
            </Grid>
        </Grid>
    </ScrollViewer>
</UserControl>