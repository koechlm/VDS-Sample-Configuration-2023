<?xml version="1.0" encoding="utf-8"?>
<WPF:MainWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:WPF="clr-namespace:CreateObject.WPF;assembly=CreateObject"
        xmlns:wpfUtilities="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.Controls.WPF.Utilities;assembly=Autodesk.DataManagement.Client.Framework.Forms"
        xmlns:winFormTheme="clr-namespace:Autodesk.DataManagement.Client.Framework.Forms.SkinUtils;assembly=Autodesk.DataManagement.Client.Framework.Forms"
        xmlns:View="clr-namespace:dataStandard.UI.View;assembly=dataStandard.UI" 
        xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
        Style="{DynamicResource ThemedWindowStyle}"
        x:Name="ReserveNumberWindow" Title="{Binding UIString[ADSK-RSRVNUMBERS_MNU20], FallbackValue='Reserve Numbers'}" SizeToContent="WidthAndHeight" ResizeMode="NoResize">
    <WPF:MainWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Autodesk.DataManagement.Client.Framework.Forms;component/Controls/WPF/ControlTemplates/MergedResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--#region themed styles for VE dialog standard controls-->
            <Style x:Key="DataStandardLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource ThemedLabelStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#ff0000" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource DataStandardLabelStyle}"/>
            <Style x:Key="DataStandardTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ThemedTextBoxStyle}">
                <Setter Property="Height" Value="24" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="4,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                        <Setter Property="BorderBrush" Value="Red" />
                    </Trigger>
                    <Trigger Property="Validation.HasError" Value="false">
                    </Trigger>
                    <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DataStandardTextBoxStyle}"/>
            <Style x:Key="Required" TargetType="{x:Type TextBox}" BasedOn="{StaticResource DataStandardTextBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="1,1,1,1" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataStandardComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ThemedComboBoxStyle}">
                <Setter Property="Height" Value="24"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
          Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}"/>
            <Style x:Key="DocTypeStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding EditMode}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TemplateCbStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DataStandardComboBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding CreateMode}" Value="True">
                        <Setter Property="ItemsSource" Value="{Binding Templates}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding EditMode}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=TemplateTB, Path=Visibility}" Value="Visible">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ThemedComboBoxItemStyle}"/>
            <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource ThemedDatePickerStyle}">
                <Setter Property="Height" Value="24"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="5,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
          Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButtonStyle}" />
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ThemedCheckBoxStyle}"/>
            <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ThemedContextMenu}"/>
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ThemedDataGridStyle}"/>
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ThemedGroupBoxStyle}"/>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ThemedExpanderStyle}" />
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ThemedRadioButtonBaseStyle}"/>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ThemedScrollViewerStyle}" />
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ThemedTextBlockStyle}"/>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ThemedTabControlStyle}"/>
            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ThemedListBoxStyle }" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=CurrentTheme, 
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Default}">
                        <Setter Property="BorderBrush" Value="#FFABADB3"/>
                        <Setter Property="Background" Value="WhiteSmoke" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                        <Setter Property="BorderBrush" Value="#FF323A48"/>
                        <Setter Property="Background" Value="#FF454F61" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme, 
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
                        <Setter Property="Background" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ThemedListBoxItemStyle}"/>
            <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ThemedBaseControlStyle}"/>
            <Style TargetType="{x:Type Border}" >
                <Setter Property="BorderThickness" Value="1"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Default}">
                        <Setter Property="BorderBrush" Value="#FFBFBBBB"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Dark}">
                        <Setter Property="BorderBrush" Value="#FF323A48"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentTheme,
                        Source={x:Static wpfUtilities:ActiveThemeProvider.Instance}}" Value="{x:Static winFormTheme:Theme.Light}">
                        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--#endregion themed styles for VE dialog standard controls-->
            <Style x:Key="lblRequired" TargetType="{x:Type Label}" BasedOn="{StaticResource DataStandardLabelStyle}">
                <Setter Property="TextBlock.FontWeight" Value="Bold" />
                <Setter Property="ToolTip" Value="An input/selection is required to generate numbers" />
            </Style>
            <ControlTemplate x:Key="validationTemplate">
                <Grid>
                    <Label Foreground="Red" HorizontalAlignment="Right" VerticalAlignment="Center">Please insert a integer</Label>
                    <Border BorderThickness="1" BorderBrush="Red">
                        <AdornedElementPlaceholder />
                    </Border>
                </Grid>
            </ControlTemplate>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </WPF:MainWindow.Resources>
    <Grid Margin="10" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="24" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="140"/>
            <ColumnDefinition MinWidth="280"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="lblEntityType" Content="{Binding UIString[], FallbackValue=Numbering Type}" FontWeight="Bold" />
        <ComboBox x:Name="cmbNumType" ItemsSource="{Binding PsList[mGetNumType], Mode=OneTime}" SelectedIndex="0" Grid.Column="1" Height="Auto"/>

        <Label Content="{Binding UIString[LBL10], FallbackValue=Numbering Scheme}" Grid.Row="1" FontWeight="Bold" />
        <ComboBox x:Name="NumSchms" DisplayMemberPath="Name" SelectedValuePath="Name" Grid.Column="1" SelectedIndex="0" Grid.Row="1" BorderThickness="1,0,1,1"/>
        <WPF:DSNumSchemeCtrl x:Name="DSNumSchmsCtrl" IsEnabled="{Binding IsEnabled, ElementName=NumSchms}" Scheme="{Binding SelectedItem, ElementName=NumSchms}"  GeneratedNumberProperty="_GeneratedNumber" Grid.Row="2" Grid.Column="1" Height="Auto" MinHeight="26"/>
        <Label Content="{Binding UIString[ADSK-RSRVNUMBERS_LBL105], FallbackValue=Range To Reserve}" Grid.Column="0" Grid.Row="3" 
               Style="{StaticResource lblRequired}" />
        <TextBox Grid.Column="1" Grid.Row="3" x:Name="TotalNum" Style="{StaticResource Required}" Margin="0,2,244,3" Width="60" HorizontalContentAlignment="Center" HorizontalAlignment="Left"/>

        <Label Content="{Binding UIString[ADSK-RSRVNUMBERS_LBL106], FallbackValue=Generated Numbers}" Grid.Column="0" Grid.Row="4" VerticalAlignment="Top"/>
        <TextBox Grid.Column="1" Grid.Row="4" x:Name="Range" VerticalScrollBarVisibility="Auto" MinHeight="150" MaxHeight="150" IsEnabled="True" IsReadOnly="True" 
                 ToolTip="{Binding UIString[ADSK-RSRVNUMBERS_TT32], FallbackValue=CTRL-V to insert @ target}" />
        
        <RichTextBox Grid.Column="2" Margin="10,0,0,0" Grid.RowSpan="6" Width="170">
            <FlowDocument>
                <Paragraph>
                    <Run FontWeight="Bold" Text="{Binding UIString[ADSK-RSRVNUMBERS_MSG03], FallbackValue=Instructions...}"/>
                </Paragraph>
                <Paragraph>
                    <Run Text="{Binding UIString[ADSK-RSRVNUMBERS_MSG04], FallbackValue=Step 1}"/>
                </Paragraph>
                <Paragraph>
                    <Run Text="{Binding UIString[ADSK-RSRVNUMBERS_MSG05], FallbackValue=Step 2}"/>
                </Paragraph>
                <Paragraph>
                    <Run Text="{Binding UIString[ADSK-RSRVNUMBERS_MSG06], FallbackValue=Step 3}"/>
                </Paragraph>
                <Paragraph>
                    <Run Text="{Binding UIString[ADSK-RSRVNUMBERS_MSG07], FallbackValue=Result}"/>
                </Paragraph>
            </FlowDocument>
        </RichTextBox>

        <Grid Grid.Row="7" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="80" />
            </Grid.ColumnDefinitions>
            <Button x:Name="Generate" Content="{Binding UIString[ADSK-RSRVNUMBERS_BTN7], FallbackValue=Generate}" Command="{Binding PsCmd[Reserve]}" Grid.Column="1" HorizontalAlignment="Right" Width="80" IsEnabled="True" ToolTip="{Binding UIString[ADSK-RSRVNUMBERS_TT33], FallbackValue=Generates Numbers and adds these to ClipBoard}" />
            <Button Content="{Binding UIString[ADSK-RSRVNUMBERS_BTN8], FallbackValue=Close}" Grid.Column="3" HorizontalAlignment="Right"  Width="80" Command="{Binding CancelWindowCommand, ElementName=ReserveNumberWindow}" />

        </Grid>
    </Grid>
</WPF:MainWindow>